<process name="Python VBO(x64)v3.0" version="1.0" bpversion="7.2.1.7446" narrative="" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Exclusive" preferredid="52f39f04-33e5-49ce-a305-d914b16bb2b6">
  <appdef>
    <element name="Application Root">
      <id>f75addc7-31db-4519-9dcd-d4f9442a5b8e</id>
      <type>Application</type>
      <basetype>Application</basetype>
      <datatype>unknown</datatype>
      <diagnose>False</diagnose>
    </element>
  </appdef>
  <view>
    <camerax>24</camerax>
    <cameray>0</cameray>
    <zoom version="2">1.25</zoom>
  </view>
  <preconditions />
  <endpoint narrative="" />
  <subsheet subsheetid="4c732ae4-57d7-440f-b73c-9113dfd97d45" type="CleanUp" published="True">
    <name>Clean Up</name>
    <view>
      <camerax>0</camerax>
      <cameray>-43</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="a1a1ddb2-cb46-41d6-9b3f-be704ac35078" type="Normal" published="True">
    <name>Create Intance</name>
    <view>
      <camerax>-8</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="24064714-3f88-47ba-a199-a92d0290d8e2" type="Normal" published="True">
    <name>Close Instance</name>
    <view>
      <camerax>0</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="129ddb52-ef8f-414c-aa3d-d26eede6da01" type="Normal" published="False">
    <name>getTextFromPyScript</name>
    <view>
      <camerax>0</camerax>
      <cameray>-38</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="f3bc5d65-3e82-4b37-8463-de3fc1a0a785" type="Normal" published="True">
    <name>Execute Py Script (No Output)</name>
    <view>
      <camerax>0</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="255c4778-f4fc-4bd8-b1b5-5e744212297e" type="Normal" published="True">
    <name>Execute Py File (No Output)</name>
    <view>
      <camerax>-8</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="c4856e06-6af6-462d-860e-39896eeba17f" type="Normal" published="True">
    <name>Get Text</name>
    <view>
      <camerax>0</camerax>
      <cameray>-15</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="8b2b1c23-f78f-4dc4-b916-cf5d04a8a639" type="Normal" published="True">
    <name>Get Binary</name>
    <view>
      <camerax>0</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="0c8d485c-6b79-44b9-8bdd-ed05e727bf85" type="Normal" published="False">
    <name>Get DataTable</name>
    <view>
      <camerax>-36</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="9a41b306-9bb5-4e09-b1c4-97b269f78b62" type="Normal" published="True">
    <name>Get MultipleValues</name>
    <view>
      <camerax>-36</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="8ca3427d-7efe-46bb-8184-c719e5f3b861" type="Normal" published="True">
    <name>Get Collection</name>
    <view>
      <camerax>0</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="63f66cd9-d661-4291-b7c2-a2cb6b7891b5" type="Normal" published="True">
    <name>Get Date</name>
    <view>
      <camerax>0</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="72ebe8b9-0556-457c-83d7-77568d612485" type="Normal" published="True">
    <name>Get DateTime</name>
    <view>
      <camerax>0</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="db814ed0-265b-4a00-8b3f-36db06407383" type="Normal" published="True">
    <name>Get Flag</name>
    <view>
      <camerax>0</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="52083995-a382-409e-a8ca-aa0638170e64" type="Normal" published="True">
    <name>Get Image</name>
    <view>
      <camerax>-9</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="8056d7fb-b380-4ba6-907e-31badc015322" type="Normal" published="True">
    <name>Get Number</name>
    <view>
      <camerax>0</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="287e8629-16ba-4635-bbbe-2b20e73bdc7f" type="Normal" published="True">
    <name>Get Time</name>
    <view>
      <camerax>-116</camerax>
      <cameray>42</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="4b5acbc4-b880-4e0c-9373-aa2f7116ebf0" type="Normal" published="True">
    <name>Get TimeSpan</name>
    <view>
      <camerax>-78</camerax>
      <cameray>21</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="f4d1d3e7-f73a-4554-bc89-fc17a380b590" type="Normal" published="True">
    <name>Get Module List</name>
    <view>
      <camerax>7</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="fc3bf868-3410-4295-a5f7-54db32cae95f" type="Normal" published="True">
    <name>Set Module Search Path</name>
    <view>
      <camerax>0</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="378f1982-bc0b-480a-bf8a-1bc3b15ff4a1" type="Normal" published="True">
    <name>Install pip Module</name>
    <view>
      <camerax>7</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="f0441b78-8dea-453a-82b9-3bdad0c7e77d" type="Normal" published="True">
    <name>Uninstall pip Module</name>
    <view>
      <camerax>7</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <stage stageid="fcff0acf-2cd7-404b-9cc4-4168610d52e6" name="Start" type="Start">
    <loginhibit />
    <display x="15" y="-105" />
    <onsuccess>411d465a-1a44-4553-99bd-ec67ee9b9f15</onsuccess>
  </stage>
  <stage stageid="411d465a-1a44-4553-99bd-ec67ee9b9f15" name="End" type="End">
    <loginhibit />
    <display x="15" y="90" />
  </stage>
  <stage stageid="360aeeb2-a7f4-48e6-abd5-045ef6247601" name="Stage1" type="ProcessInfo">
    <display x="-195" y="-105" w="150" h="90" />
    <references>
      <reference>System.dll</reference>
      <reference>System.Data.dll</reference>
      <reference>System.Xml.dll</reference>
      <reference>System.Drawing.dll</reference>
      <reference>System.Core.dll</reference>
      <reference>Microsoft.CSharp.dll</reference>
      <reference>System.IO.dll</reference>
      <reference>System.Windows.Forms.dll</reference>
      <reference>Python.Runtime.dll</reference>
      <reference>netstandard.dll</reference>
      <reference>System.Numerics.dll</reference>
    </references>
    <imports>
      <import>System</import>
      <import>System.Drawing</import>
      <import>System.Data</import>
      <import>System.Reflection</import>
      <import>System.Runtime</import>
      <import>System.IO</import>
      <import>Microsoft.CSharp</import>
      <import>System.Reflection</import>
      <import>System.Collections.Generic</import>
      <import>System.Runtime.InteropServices</import>
      <import>System.Diagnostics</import>
      <import>System.Windows.Forms</import>
      <import>System.Linq</import>
      <import>Python.Runtime</import>
      <import>System.Threading.Tasks</import>
      <import>System.Threading</import>
    </imports>
    <language>csharp</language>
    <globalcode><![CDATA[]]></globalcode>
    <code><![CDATA[private PythonEngineWrapper instance2 = null;
private int GlobalWait = 30;


private void IsInitialised(){
	if(instance2 == null)
		throw new Exception("Please call 'Create Instance' action before calling other actions from this VBO.");
}

public class OutputResults
{
    public bool isSuccess { get; set; } 
    public string errorMessage { get; set; } 
    public object outResult { get; set; } 
    public OutputResults() { } 
}


public class PythonEngineWrapper
{
    private readonly string _pythonInstalledRootLocation; 
    private readonly int _pythonVersion; 
    private readonly string _pythonDllPath; 
    private IntPtr _ptr = IntPtr.Zero; 
    public bool _debug { get; set; } 
    public bool _isParamsPythonType { get; set; } 
	private bool _isException = false;
    private readonly Dictionary<string, Type> _bptypes = new Dictionary<string, Type>()
	{
		{ "DateTime", typeof(DateTime) },
		{ "str", typeof(string) },
		{ "String", typeof(string) },
		{ "string", typeof(string) },
		{ "TimeSpan", typeof(TimeSpan) },
		{ "Boolean", typeof(Boolean) },
		{ "bool", typeof(Boolean) },
		{ "Decimal", typeof(Decimal) },
		{ "int", typeof(Decimal) },
		{ "float", typeof(Decimal) },
		{ "double", typeof(Decimal) },
		{ "Byte[]", typeof(Byte[]) },
		{ "byte[]", typeof(Byte[]) },
		{ "DataTable", typeof(DataTable) },
		{ "Bitmap", typeof(Bitmap) },
		{ "tuple", typeof(PyTuple) },
		{ "PyTuple", typeof(PyTuple) }
	};
    private readonly Dictionary<string, Type> _nettypes = new Dictionary<string, Type>()
	{
		{ "DateTime", typeof(DateTime) },
		{ "str", typeof(string) },
		{ "String", typeof(string) },
		{ "string", typeof(string) },
		{ "TimeSpan", typeof(TimeSpan) },
		{ "Boolean", typeof(Boolean) },
		{ "bool", typeof(Boolean) },
		{ "Decimal", typeof(Decimal) },
		{ "int", typeof(int) },
		{ "float", typeof(float) },
		{ "double", typeof(double) },
		{ "Byte[]", typeof(Byte[]) },
		{ "byte[]", typeof(byte[]) },
		{ "DataTable", typeof(DataTable) },
		{ "Bitmap", typeof(Bitmap) }
	};    
    public PythonEngineWrapper(string pythonInstallationRootLocation, int pythonVersion)
    {
        _pythonInstalledRootLocation = pythonInstallationRootLocation; 
        _pythonVersion = pythonVersion; 
        
        _pythonDllPath = Path.Combine(_pythonInstalledRootLocation, $"python{_pythonVersion}.dll");
        
        if (!File.Exists(_pythonDllPath))
            throw new FileNotFoundException("Python DLL file not found at path: " + _pythonDllPath);

        SetPythonDll(); 
        Init(); 
    }

    
    private void Init()
    {

        
        if (!PythonEngine.IsInitialized)
        {
             
            try
            {
                PythonEngine.Initialize();
                _ptr = PythonEngine.BeginAllowThreads(); 
            }catch(PythonException pe)
            {
                throw new Exception("Python Exception while init "+pe.Message + "\n" + (pe.InnerException != null ? pe.InnerException.Message : "") + "\n" + pe.StackTrace);
            }
            catch (Exception ex)
            {
                throw new Exception(ex.Message + "\n" + (ex.InnerException != null ? ex.InnerException.Message : "") + "\n" + ex.StackTrace); 
            }
        }
    }

    
    private void SetPythonDll()
    {
        
        if (string.IsNullOrEmpty(Runtime.PythonDLL))
        {
            try
            {
                Runtime.PythonDLL = _pythonDllPath; 
            }
            catch (Exception ex)
            {
                throw new Exception(ex.Message + "\n" + (ex.InnerException != null ? ex.InnerException.Message : "") + "\n" + ex.StackTrace); 
            }
        }
    }

    
    public OutputResults ExecutePythonScript<T>(string pythonScript, string functionName = null, DataTable parameters = null, bool isFile = false)
    {
        OutputResults outputResults = new OutputResults(); 
        CheckParams(pythonScript, isFile, ref outputResults); 
        if (!string.IsNullOrEmpty(outputResults.errorMessage)) 
            return outputResults;

        try
        {
            Init(); 
            using (Py.GIL()) 
            {
                if (_debug)
                    SetConsoleOutput();
                using (var scope = Py.CreateScope()) 
                {
                    CompileAndExecute(pythonScript, functionName, isFile, scope);

                    if (string.IsNullOrEmpty(functionName)) 
                    {
                        SetSuccessResult(ref outputResults, null);
                        return outputResults;
                    }

                    PyObject pythonFunction = scope.Get(functionName); 
                    PyObject[] paras = ParseAndGetParameters(parameters); 
                    PyObject res = paras != null ? pythonFunction.Invoke(paras) : pythonFunction.Invoke(); 
                    GetAndSetOutputFromPythonObject<T>(res, ref outputResults); 
                    
                }
            }
        }
        catch (PythonException pe)
        {
            try
            {
                if (_debug)
                    ConsoleData += pe.Format();
                SetErrorResult(ref outputResults, pe.Message);
            
                if (!pe.IsNormalized)
                    pe.Normalize();
            }
            catch (Exception) { }
            
        }
        catch (Exception ex)
        {
            if (_debug)
                ConsoleData += "Exception Message: " + ex.Message + "\n Inner Exception: " + ex.InnerException == null ? "" : ex.InnerException.Message + "\n Stack Trace: "+ex.StackTrace;
            SetErrorResult(ref outputResults, ex.Message); 
        }
        finally
        {
            if (_debug)
            {
                GetConsoleOutput();
                ShowConsoleOutput();
            }
        }
        return outputResults;
    }

    
    private void CompileAndExecute(string ScriptOrPath, string functionName, bool isFile, PyModule scope)
    {
        string filepath = "";
        if (isFile)
        {
            if (ScriptOrPath.EndsWith(".py")) 
            {
                filepath = ScriptOrPath;
                ScriptOrPath = GetFileContentAsTextAndSetPath(ScriptOrPath); 
            }
            else if (ScriptOrPath.EndsWith(".pyc"))
            {
                scope.SetAttr(functionName, Py.Import(GetFileNameWithoutExtension(ScriptOrPath)).GetAttr(functionName));
                return; 
            }
        }

        var scriptCompiled = PythonEngine.Compile(ScriptOrPath, filepath); 
        scope.Execute(scriptCompiled);
    }

    
    private void GetAndSetOutputFromPythonObject<T>(PyObject pyResults, ref OutputResults outputResults)
    {
        var returnedType = pyResults.GetPythonType();
        //if (!_bpTypes.Contains(returnedType.Name) || !_bpTypes.Contains(typeof(T).Name))
        if (!_bptypes.ContainsKey(returnedType.Name) || !_bptypes.ContainsKey(typeof(T).Name))
        {
            SetErrorResult(ref outputResults, $"Python script should return BP supported types such as {string.Join(", ", _bptypes.Keys)}. But returned type is: {returnedType.Name}");
            return;
        }
        if (typeof(T).Name.Equals("tuple") || typeof(T).Name.Equals("PyTuple"))
        {
            var tmpTuple = GetPythonObjectTypeName(pyResults);
            if (tmpTuple == null && !(tmpTuple.Equals("tuple") || tmpTuple.Equals("PyTuple")))
            {
                SetErrorResult(ref outputResults, "Your callback function returns " + tmpTuple + " type. Please change return type in your script, instead of returning the type" + tmpTuple + ", return the tuple object.");
                return;
            }
            var tuple = (PyTuple)pyResults.AsManagedObject(typeof(T));
            var dt = new DataTable();
            for (int i = 0; i < tuple.Count(); i++)
            {
                var item = tuple[i];
                var itemType = GetPythonObjectTypeName(item);
                if (!_bptypes.ContainsKey(itemType))
                {
                    SetErrorResult(ref outputResults, $"Python script should return BP supported types such as {string.Join(", ", _bptypes.Keys)}. But returned type is: '{itemType}' and in position {i}");
                    return;
                }

                var columnName = "Column" + i;
                var netType = _nettypes[itemType];
                dt.Columns.Add(columnName, netType);

                var value = item.AsManagedObject(netType);
                if(i==0)
                    dt.Rows.Add();
                dt.Rows[0][columnName] = Convert.ChangeType(value, netType);
            }

            SetSuccessResult(ref outputResults, dt);
        }
        else
        {
            SetSuccessResult(ref outputResults, pyResults.AsManagedObject(typeof(T)));
        }
       
    }

    
    private string GetPythonObjectTypeName(PyObject pyObject)
    {
        return !pyObject.IsNone() ? pyObject.GetAttr("__class__").ToString().Split('\'')[1].Split('.').Last() : null;
    }

    
    private void CheckParams(string scriptOrPath, bool isFile, ref OutputResults outputResults)
    {
        if (string.IsNullOrEmpty(scriptOrPath)) 
        {
            SetErrorResult(ref outputResults, "Python script should not be null or empty"); 
            return;
        }

        if (isFile && !(scriptOrPath.EndsWith(".py") || scriptOrPath.EndsWith(".pyc"))) 
        {
            SetErrorResult(ref outputResults, "Invalid path or the path doesn't contain the file name(.py)"); 
        }
    }

    
    private string GetFileContentAsTextAndSetPath(string filePath)
    {
        SetPathFromFilePath(filePath); 
        return File.ReadAllText(filePath); 
    }

    
    private string GetFileNameWithoutExtension(string fileName)
    {
        SetPathFromFilePath(fileName);
        return Path.GetFileNameWithoutExtension(fileName);
    }

    
    private void SetPathFromFilePath(string filePath)
    {
        dynamic os = Py.Import("os"); 
        dynamic sys = Py.Import("sys"); 
        sys.path.append(os.path.dirname(os.path.expanduser(filePath))); 
    }

    
    private PyObject[] ParseAndGetParameters(DataTable parameters)
    {
        if (parameters != null && parameters.Rows.Count > 0 && parameters.Rows[0].ItemArray.Length > 0) 
        {
            var rows = parameters.Rows[0].ItemArray;
            PyObject[] paras = new PyObject[rows.Length]; 
            for (int i = 0; i < rows.Length; i++)
            {
                var row = rows[i];
                if (_isParamsPythonType && row is decimal)
                {
                    paras[i] = row.ToString().Contains(".") ? new PyFloat(row.ToString()).ToPython() : new PyInt(row.ToString()).ToPython();
                    continue;
                }
                

                paras[i] = row.ToPython();
            }

            return paras; 
        }

        return null; 
    }

    
    public string Close()
    {
        string debugClose = null;
        if (_ptr != IntPtr.Zero) 
        {
            
            try
            {
                PythonEngine.EndAllowThreads(_ptr); 
                PythonEngine.Shutdown(); 
            }
            catch (PythonException pe)
            {
                try
                {
                    debugClose = "Exception Message: " + pe.Message + "\n Inner Exception: " +
                        pe.InnerException == null ? "" : pe.InnerException.Message +
                        "\n Stack Trace: " + pe.StackTrace;
                    if (!pe.IsNormalized)
                        pe.Normalize();
                    
                }catch (Exception e)
                {
                    debugClose += "\nException Message: " + e.Message + "\n Inner Exception: " +
                        e.InnerException == null ? "" : e.InnerException.Message +
                        "\n Stack Trace: " + e.StackTrace;
                }
            }
            catch (Exception ex)
            {
                debugClose = "Exception Message: " + ex.Message + "\n Inner Exception: " + 
                    ex.InnerException == null ? "" : ex.InnerException.Message + 
                    "\n Stack Trace: " + ex.StackTrace;
            }
        }
        return debugClose;
    }

    
    private void SetSuccessResult(ref OutputResults outputResults, object result)
    {
        outputResults.isSuccess = true;
        outputResults.errorMessage = "";
        outputResults.outResult = result;
    }

    
    private void SetErrorResult(ref OutputResults outputResults, string errorMessage)
    {
        outputResults.isSuccess = false;
        outputResults.errorMessage = errorMessage;
    }

    private dynamic StdOut;
    private dynamic Output;
    private dynamic Sys;
    private string ConsoleData = "";
    
    private void SetConsoleOutput()
    {
        Sys = Py.Import("sys");
        StdOut = Sys.stdout;
        dynamic io = Py.Import("io");
        Output = io.StringIO();
        Sys.stdout = Output;
        
    }
    private void GetConsoleOutput()
    {
		string str = "";
		using (Py.GIL())
			str =  Output.getvalue();
		if (_isException)
			str = string.Concat("Script or File executed Unsucessfully.\n", str);
		else str = string.Concat("Script or File executed Sucessfully.\n", str);
		ConsoleData = str + "\n" + ConsoleData;
    }
    private void ResetConsoleOutput()
    {
        using (Py.GIL())
            Sys.stdout = StdOut;
        ConsoleData = "";
    }
    private void ShowConsoleOutput()
    {
        ShowWindow();
        ResetConsoleOutput();
    }
    private RichTextBox richTextBox; 
    private Form form;

    private void ShowWindow()
    {
        //MessageBox.Show("Thread executed");
        form = new Form();
        form.Text = "Console Output";
        form.Width = 600;
        form.Height = 400;
        form.Resize += Form_Resize;
        
        richTextBox = new RichTextBox();
        
        richTextBox.ReadOnly = true;
        
        richTextBox.Multiline = true;
        richTextBox.Font = new Font("Consolas", 9, FontStyle.Regular);
        richTextBox.BackColor = Color.White;
        richTextBox.Size = new Size(form.Width, form.Height-80);
        richTextBox.ScrollBars = RichTextBoxScrollBars.Both;
        richTextBox.WordWrap = false;
        richTextBox.Text = ConsoleData;
        form.Controls.Add(richTextBox);

        
        Button copyButton = new Button
        {
            Text = "Copy"
        };
        copyButton.Name = "copyButton";
        copyButton.Location = new System.Drawing.Point(10, form.Height - copyButton.Height - 50);
        copyButton.Click +=  CopyButton_Click; 
        form.Controls.Add(copyButton);

        
        Button okButton = new Button
        {
            Text = "OK",
            Name = "okButton"
        };
        
        okButton.Location = new System.Drawing.Point(form.Width - okButton.Width - 30, form.Height - okButton.Height - 50);
        okButton.Click +=  OkButton_Click; 
        form.Controls.Add(okButton);
        
        
        form.FormClosed += (sender, e) => form.Dispose();

        
        Application.Run(form);
    }
    private void Form_Resize(object sender, EventArgs e)
    {
        
        if (form != null && richTextBox != null)
        {
            richTextBox.Size = new System.Drawing.Size(form.ClientSize.Width, form.ClientSize.Height - 40);
            
            Button copyButton = form.Controls["copyButton"] as Button;
            if (copyButton != null)
            {
                copyButton.Location = new System.Drawing.Point(10, form.ClientSize.Height - copyButton.Height - 10);
            }

            Button okButton = form.Controls["okButton"] as Button;
            if (okButton != null)
            {
                okButton.Location = new System.Drawing.Point(form.ClientSize.Width - okButton.Width - 10, form.ClientSize.Height - okButton.Height - 10);
            }
        }
    }
    private void CopyButton_Click(object sender, EventArgs e)
    {
        
        Clipboard.SetText(richTextBox.Text);
    }

    private void OkButton_Click(object sender, EventArgs e)
    {
        
        form.Dispose();
       // windowThread.Abort();
    }
}]]></code>
  </stage>
  <stage stageid="3d7e1c25-909a-43d0-8e0c-3dce7604a3a9" name="Clean Up" type="SubSheetInfo">
    <subsheetid>4c732ae4-57d7-440f-b73c-9113dfd97d45</subsheetid>
    <display x="-195" y="-105" w="150" h="90" />
  </stage>
  <stage stageid="fb110d4f-e68d-4edc-abb5-c362ca2b27de" name="Start" type="Start">
    <subsheetid>4c732ae4-57d7-440f-b73c-9113dfd97d45</subsheetid>
    <loginhibit />
    <display x="15" y="-105" />
    <onsuccess>65ba20c1-c510-42d0-82fe-9d182b63a6d8</onsuccess>
  </stage>
  <stage stageid="65ba20c1-c510-42d0-82fe-9d182b63a6d8" name="End" type="End">
    <subsheetid>4c732ae4-57d7-440f-b73c-9113dfd97d45</subsheetid>
    <loginhibit />
    <display x="15" y="90" />
  </stage>
  <stage stageid="d5007535-e85a-483e-ba6f-a54ffc4f8e43" name="Note1" type="Note">
    <subsheetid>4c732ae4-57d7-440f-b73c-9113dfd97d45</subsheetid>
    <narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative>
    <display x="-180" y="60" w="180" h="230" />
  </stage>
  <stage stageid="0a258114-31b2-4aaf-8635-d1d97f5667d2" name="Note2" type="Note">
    <narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative>
    <display x="-180" y="60" w="180" h="230" />
  </stage>
  <stage stageid="83ad9122-c5d2-4692-b21d-65c736b482d6" name="Create Intance" type="SubSheetInfo">
    <subsheetid>a1a1ddb2-cb46-41d6-9b3f-be704ac35078</subsheetid>
    <narrative>Creates an instance of python.
Note: This action should call before using other actions from this object.</narrative>
    <display x="-255" y="-30" w="150" h="90" />
  </stage>
  <stage stageid="4b9020f2-6a88-470e-ad80-929ddad3a553" name="Start" type="Start">
    <subsheetid>a1a1ddb2-cb46-41d6-9b3f-be704ac35078</subsheetid>
    <loginhibit />
    <display x="15" y="-75" />
    <inputs>
      <input type="text" name="Python Root Folder Path*" narrative="Please provide path to export standard library path or leave blank automatically exported to temp path" stage="PythonRootFolderPath" />
      <input type="flag" name="IsDebugMode**" narrative="This switch is used to turn on/off Alerts when python script executed successfully; true" stage="IsDeubg" />
      <input type="number" name="Python Version*" narrative="Provide python version" stage="PythonVersion" />
      <input type="number" name="Global Script Execution Time Out**" narrative="This script excution timeout ; 30" stage="GlobalWait" />
    </inputs>
    <onsuccess>9c24ceb8-108d-4668-a9f1-e3d7efa89dd9</onsuccess>
  </stage>
  <stage stageid="2a009f11-40c6-40ae-85aa-322b3338ce9b" name="End" type="End">
    <subsheetid>a1a1ddb2-cb46-41d6-9b3f-be704ac35078</subsheetid>
    <loginhibit />
    <display x="15" y="15" />
  </stage>
  <stage stageid="f85bdba8-6354-4a73-91e1-70768511d77a" name="inputs" type="Block">
    <subsheetid>a1a1ddb2-cb46-41d6-9b3f-be704ac35078</subsheetid>
    <loginhibit />
    <display x="-165" y="-90" w="120" h="120" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="a9df2f7d-f04c-4049-a116-68c65d1ee0ef" name="IsDeubg" type="Data">
    <loginhibit />
    <display x="225" y="-30" w="150" h="30" />
    <datatype>flag</datatype>
    <initialvalue>False</initialvalue>
    <alwaysinit />
  </stage>
  <stage stageid="bc62af58-1de8-4303-a973-5975f031dfd0" name="getTextFromPyScript" type="SubSheetInfo">
    <subsheetid>129ddb52-ef8f-414c-aa3d-d26eede6da01</subsheetid>
    <narrative>This page will get Text from python script.
Note: Make sure call back function should be return type and return Object should be String</narrative>
    <display x="-240" y="-45" w="150" h="90" />
  </stage>
  <stage stageid="40597e70-a83a-47fb-aaf1-3e6064d1ec9e" name="End" type="End">
    <subsheetid>129ddb52-ef8f-414c-aa3d-d26eede6da01</subsheetid>
    <loginhibit />
    <display x="30" y="-15" />
    <outputs>
      <output type="text" name="string" narrative="This is output from python script" stage="output" />
      <output type="flag" name="Suucess" stage="Success" />
      <output type="text" name="Error Message" stage="Error_Message" />
    </outputs>
  </stage>
  <stage stageid="bce7d9d9-12df-41b4-9fb0-da0c57c84b20" name="getText" type="Code">
    <subsheetid>129ddb52-ef8f-414c-aa3d-d26eede6da01</subsheetid>
    <loginhibit />
    <display x="30" y="-60" />
    <inputs>
      <input type="text" name="scr" expr="[input]" />
      <input type="text" name="function_name" expr="[function_name]" />
      <input type="collection" name="param" expr="[Parameters(opt)]" />
    </inputs>
    <outputs>
      <output type="text" name="ret" stage="output" />
      <output type="flag" name="Success" stage="Success" />
      <output type="text" name="Error_Message" stage="Error_Message" />
    </outputs>
    <onsuccess>40597e70-a83a-47fb-aaf1-3e6064d1ec9e</onsuccess>
    <code><![CDATA[IsInitialised();
OutputResults result = null;
if(!string.IsNullOrEmpty(scr) && !string.IsNullOrEmpty(function_name)){
	Task t = Task.Run(() => { 
	result = instance2.ExecutePythonScript<string>(scr, function_name, param);
	});
	t.Wait(TimeSpan.FromSeconds(GlobalWait));
}
	
if(result == null){
	Success = false;
	Error_Message = "script or file_name is invalid or script execution timedout";
	ret = default(string);
}else{
	Success = result.isSuccess;
	Error_Message = result.errorMessage;
	if(result.outResult != null)
		ret = (string)result.outResult;
	else ret = default(string);
}]]></code>
  </stage>
  <stage stageid="c7b249b0-37ed-4a36-855c-2ad74d8e579b" name="output" type="Data">
    <subsheetid>129ddb52-ef8f-414c-aa3d-d26eede6da01</subsheetid>
    <display x="-90" y="0" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="2736a733-038d-4251-9dde-1670d0bf859b" name="input" type="Data">
    <subsheetid>129ddb52-ef8f-414c-aa3d-d26eede6da01</subsheetid>
    <display x="-90" y="-135" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="5b91b439-1ae7-4fd6-a7c5-02ee1bf3b6e3" name="function_name" type="Data">
    <subsheetid>129ddb52-ef8f-414c-aa3d-d26eede6da01</subsheetid>
    <loginhibit />
    <display x="-90" y="-105" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue xml:space="preserve">get_text</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="be2c628b-4c6d-4175-8c1e-3a8719c4b73c" name="Start" type="Start">
    <subsheetid>129ddb52-ef8f-414c-aa3d-d26eede6da01</subsheetid>
    <loginhibit />
    <display x="30" y="-105" />
    <inputs>
      <input type="text" name="script(mand)" narrative="python script string" stage="input" />
      <input type="text" name="call_back_function_name(mand)" narrative="Call back function name (Don't include &quot;()&quot;)" stage="function_name" />
      <input type="collection" name="Parameters(opt)" narrative="this parameters will pass to function" stage="Parameters(opt)" />
    </inputs>
    <onsuccess>bce7d9d9-12df-41b4-9fb0-da0c57c84b20</onsuccess>
  </stage>
  <stage stageid="fb75e1f8-2b71-472a-ba59-d6e26faeab10" name="Parameters(opt)" type="Collection">
    <subsheetid>129ddb52-ef8f-414c-aa3d-d26eede6da01</subsheetid>
    <display x="-90" y="-75" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="2c3583ad-948c-4d6b-b864-bd686a783a01" name="inputs" type="Block">
    <subsheetid>129ddb52-ef8f-414c-aa3d-d26eede6da01</subsheetid>
    <loginhibit />
    <display x="-150" y="-165" w="120" h="120" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="0b19e009-dd94-4a09-a48f-68b5322b893f" name="outputs" type="Block">
    <subsheetid>129ddb52-ef8f-414c-aa3d-d26eede6da01</subsheetid>
    <loginhibit />
    <display x="-150" y="-30" w="120" h="120" />
    <font family="Segoe UI" size="10" style="Regular" color="00FF00" />
  </stage>
  <stage stageid="39392abf-a6d8-407a-9156-4d37dce88041" name="Message_Timeout(sec)" type="Data">
    <loginhibit />
    <display x="225" y="0" w="150" h="30" />
    <datatype>number</datatype>
    <initialvalue>5</initialvalue>
    <alwaysinit />
  </stage>
  <stage stageid="12e70438-8909-404f-9506-571d27723eda" name="Execute Py Script (No Output)" type="SubSheetInfo">
    <subsheetid>f3bc5d65-3e82-4b37-8463-de3fc1a0a785</subsheetid>
    <narrative>This page will executes the python script from Text</narrative>
    <display x="-255" y="-15" w="150" h="90" />
  </stage>
  <stage stageid="fdbf2080-136c-414f-b690-18eedce334db" name="Start" type="Start">
    <subsheetid>f3bc5d65-3e82-4b37-8463-de3fc1a0a785</subsheetid>
    <loginhibit />
    <display x="15" y="-75" />
    <inputs>
      <input type="text" name="Python Script Text*" narrative="Python script" stage="PyScript" />
    </inputs>
    <onsuccess>c8385f30-5242-4c56-ab7b-e9e51af0d229</onsuccess>
  </stage>
  <stage stageid="2ba41069-e212-4424-b095-a766ac05e0a5" name="End" type="End">
    <subsheetid>f3bc5d65-3e82-4b37-8463-de3fc1a0a785</subsheetid>
    <loginhibit />
    <display x="15" y="15" />
    <outputs>
      <output type="text" name="Error Message" stage="Error_Message" />
      <output type="flag" name="Success" stage="Success" />
    </outputs>
  </stage>
  <stage stageid="f12f38c1-fa22-4e75-8255-f238cdfba380" name="PyScript" type="Data">
    <subsheetid>f3bc5d65-3e82-4b37-8463-de3fc1a0a785</subsheetid>
    <display x="-105" y="-60" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="c8385f30-5242-4c56-ab7b-e9e51af0d229" name="Execute Py Script" type="Code">
    <subsheetid>f3bc5d65-3e82-4b37-8463-de3fc1a0a785</subsheetid>
    <loginhibit />
    <display x="15" y="-30" />
    <inputs>
      <input type="text" name="code" expr="[PyScript]" />
    </inputs>
    <outputs>
      <output type="flag" name="Success" stage="Success" />
      <output type="text" name="Error_Message" stage="Error_Message" />
    </outputs>
    <onsuccess>2ba41069-e212-4424-b095-a766ac05e0a5</onsuccess>
    <code><![CDATA[IsInitialised();

OutputResults result = null;
if(!string.IsNullOrEmpty(code)){
	Task t = Task.Run(() => { 
	result = instance2.ExecutePythonScript<object>(code);
	});
	t.Wait(TimeSpan.FromSeconds(GlobalWait));
}

if(result == null){
	Success = false;
	Error_Message = "script or file_name is invalid or script execution timedout";
}else{
	Success = result.isSuccess;
	Error_Message = result.errorMessage;
}]]></code>
  </stage>
  <stage stageid="3bad39d0-ce50-48a5-925b-51ced5ce308a" name="inputs" type="Block">
    <subsheetid>f3bc5d65-3e82-4b37-8463-de3fc1a0a785</subsheetid>
    <loginhibit />
    <display x="-165" y="-90" w="120" h="60" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="b93cd298-7a61-4279-ba81-39def25d4b45" name="Get Text" type="SubSheetInfo">
    <subsheetid>c4856e06-6af6-462d-860e-39896eeba17f</subsheetid>
    <narrative>This page will get the Text from python script file.
Note: Make sure call back function should be return type and return Object should be String</narrative>
    <display x="-345" y="-30" w="150" h="90" />
  </stage>
  <stage stageid="2c3d639b-e48c-4121-bd74-2ae118805c11" name="fun" type="Data">
    <subsheetid>c4856e06-6af6-462d-860e-39896eeba17f</subsheetid>
    <display x="-195" y="30" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="9667b740-6861-4201-88e3-f7085dd15b85" name="outputs" type="Block">
    <subsheetid>c4856e06-6af6-462d-860e-39896eeba17f</subsheetid>
    <loginhibit />
    <display x="-255" y="0" w="120" h="120" />
    <font family="Segoe UI" size="10" style="Regular" color="00FF00" />
  </stage>
  <stage stageid="6fdc1bba-8f5b-41fa-b64f-20b820f7038c" name="Execute Py File (No Output)" type="SubSheetInfo">
    <subsheetid>255c4778-f4fc-4bd8-b1b5-5e744212297e</subsheetid>
    <narrative>This page will executes the python script from File</narrative>
    <display x="-345" y="0" w="150" h="90" />
  </stage>
  <stage stageid="c5f4a33e-6c9f-4481-8876-9280a23f6eb9" name="file_name" type="Data">
    <subsheetid>255c4778-f4fc-4bd8-b1b5-5e744212297e</subsheetid>
    <display x="-195" y="-45" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="4ee97a0d-3262-49b2-9c0a-2f4e98d85df1" name="Start" type="Start">
    <subsheetid>255c4778-f4fc-4bd8-b1b5-5e744212297e</subsheetid>
    <loginhibit />
    <display x="-75" y="-60" />
    <inputs>
      <input type="text" name="Python Script File Path*" narrative="python script file with full path" stage="file_name" />
    </inputs>
    <onsuccess>0f17db5e-2874-4717-bda8-b7e8a3066a95</onsuccess>
  </stage>
  <stage stageid="c9a56287-4a28-4f90-9d09-32389faa4ce4" name="inputs" type="Block">
    <subsheetid>255c4778-f4fc-4bd8-b1b5-5e744212297e</subsheetid>
    <loginhibit />
    <display x="-255" y="-75" w="120" h="60" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="b54ff820-0833-4bc4-ad52-968792ba76c9" name="Get Binary" type="SubSheetInfo">
    <subsheetid>8b2b1c23-f78f-4dc4-b916-cf5d04a8a639</subsheetid>
    <narrative>This page will get Binary from python script.
Note: Make sure call back function should be return type and return Object should be byte[]</narrative>
    <display x="-210" y="15" w="150" h="90" />
  </stage>
  <stage stageid="de3e27d2-a587-46a5-b230-9ddb9b19a936" name="function_name" type="Data">
    <subsheetid>8b2b1c23-f78f-4dc4-b916-cf5d04a8a639</subsheetid>
    <display x="-60" y="-45" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="a1957c7f-ec82-40e1-a32a-1a5f9274101e" name="Parameters(opt)" type="Collection">
    <subsheetid>8b2b1c23-f78f-4dc4-b916-cf5d04a8a639</subsheetid>
    <display x="-60" y="-15" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="b18529aa-79e7-4b6c-9704-130f01d91e98" name="script" type="Data">
    <subsheetid>8b2b1c23-f78f-4dc4-b916-cf5d04a8a639</subsheetid>
    <display x="-60" y="-105" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="5d1cb202-d8d1-4a77-978a-eb1b17f0626e" name="inputs" type="Block">
    <subsheetid>8b2b1c23-f78f-4dc4-b916-cf5d04a8a639</subsheetid>
    <loginhibit />
    <display x="-120" y="-135" w="120" h="150" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="dd909e9e-5e19-4b87-b625-b82edfff0dde" name="bin" type="Data">
    <subsheetid>8b2b1c23-f78f-4dc4-b916-cf5d04a8a639</subsheetid>
    <loginhibit />
    <display x="-60" y="60" w="90" h="30" />
    <datatype>binary</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="36d2fec4-46d9-4a5d-9a21-dd85f260f390" name="outputs" type="Block">
    <subsheetid>8b2b1c23-f78f-4dc4-b916-cf5d04a8a639</subsheetid>
    <loginhibit />
    <display x="-120" y="30" w="120" h="120" />
    <font family="Segoe UI" size="10" style="Regular" color="00FF00" />
  </stage>
  <stage stageid="246c80c6-7d72-4234-b1e9-54b86e230fca" name="Get DataTable" type="SubSheetInfo">
    <subsheetid>0c8d485c-6b79-44b9-8bdd-ed05e727bf85</subsheetid>
    <narrative>This page will get Collection from python script.
Note: Make sure call back function should be return type and return Object should be DataTable</narrative>
    <display x="-195" y="15" w="150" h="90" />
  </stage>
  <stage stageid="8681bea8-8f00-48a8-a858-08800032267b" name="function_name" type="Data">
    <subsheetid>0c8d485c-6b79-44b9-8bdd-ed05e727bf85</subsheetid>
    <display x="-45" y="-45" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="a6f2ec91-a66f-405c-8346-7f26ffd64d40" name="Parameters(opt)" type="Collection">
    <subsheetid>0c8d485c-6b79-44b9-8bdd-ed05e727bf85</subsheetid>
    <display x="-45" y="-15" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="06d56577-1e86-49e0-9112-1fb33a9a19d9" name="script" type="Data">
    <subsheetid>0c8d485c-6b79-44b9-8bdd-ed05e727bf85</subsheetid>
    <display x="-45" y="-105" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="9582724e-6bfa-416e-b79b-3c4d1dd5c8e3" name="inputs" type="Block">
    <subsheetid>0c8d485c-6b79-44b9-8bdd-ed05e727bf85</subsheetid>
    <loginhibit />
    <display x="-105" y="-135" w="120" h="150" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="6835b111-8f5a-4c37-9eae-2466418fc34d" name="outputs" type="Block">
    <subsheetid>0c8d485c-6b79-44b9-8bdd-ed05e727bf85</subsheetid>
    <loginhibit />
    <display x="-105" y="30" w="120" h="120" />
    <font family="Segoe UI" size="10" style="Regular" color="00FF00" />
  </stage>
  <stage stageid="287510bb-0aa0-4d2e-b487-f878a8ace7e1" name="bin" type="Collection">
    <subsheetid>0c8d485c-6b79-44b9-8bdd-ed05e727bf85</subsheetid>
    <loginhibit />
    <display x="-45" y="60" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="1463a213-f779-40d9-9d9d-7f86ff096a55" name="Get Date" type="SubSheetInfo">
    <subsheetid>63f66cd9-d661-4291-b7c2-a2cb6b7891b5</subsheetid>
    <narrative>This page will get Date from python script.
Note: Make sure call back function should be return type and return Object should be DateTime</narrative>
    <display x="-210" y="30" w="150" h="90" />
  </stage>
  <stage stageid="2d449f75-6472-4562-804c-844857dd65e7" name="function_name" type="Data">
    <subsheetid>63f66cd9-d661-4291-b7c2-a2cb6b7891b5</subsheetid>
    <display x="-60" y="-30" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="17d6e739-bfc4-4ef9-87f8-255086909b4f" name="Parameters(opt)" type="Collection">
    <subsheetid>63f66cd9-d661-4291-b7c2-a2cb6b7891b5</subsheetid>
    <display x="-60" y="0" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="3e407eb2-882e-4806-9791-6ad570f2e117" name="script" type="Data">
    <subsheetid>63f66cd9-d661-4291-b7c2-a2cb6b7891b5</subsheetid>
    <display x="-60" y="-90" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="6281f2f5-0450-42eb-95da-42e34568a42f" name="inputs" type="Block">
    <subsheetid>63f66cd9-d661-4291-b7c2-a2cb6b7891b5</subsheetid>
    <loginhibit />
    <display x="-120" y="-120" w="120" h="150" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="2c53bfdd-edb2-4a51-b93f-69dc8ca9aa60" name="outputs" type="Block">
    <subsheetid>63f66cd9-d661-4291-b7c2-a2cb6b7891b5</subsheetid>
    <loginhibit />
    <display x="-120" y="45" w="120" h="120" />
    <font family="Segoe UI" size="10" style="Regular" color="00FF00" />
  </stage>
  <stage stageid="5c75911d-70e2-4544-9e3f-10db83eb1881" name="bin" type="Data">
    <subsheetid>63f66cd9-d661-4291-b7c2-a2cb6b7891b5</subsheetid>
    <loginhibit />
    <display x="-60" y="75" w="90" h="30" />
    <datatype>date</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="2494f07e-280d-4a1e-b598-8af470a273f2" name="Get DateTime" type="SubSheetInfo">
    <subsheetid>72ebe8b9-0556-457c-83d7-77568d612485</subsheetid>
    <narrative>This page will get DateTime from python script.
Note: Make sure call back function should be return type and return Object should be DateTime</narrative>
    <display x="-195" y="15" w="150" h="90" />
  </stage>
  <stage stageid="7f28cc0c-c483-45f5-9110-e32b87b4aa73" name="function_name" type="Data">
    <subsheetid>72ebe8b9-0556-457c-83d7-77568d612485</subsheetid>
    <display x="-45" y="-45" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="497f88d9-b1e5-4af6-a592-11fd392d5106" name="Parameters(opt)" type="Collection">
    <subsheetid>72ebe8b9-0556-457c-83d7-77568d612485</subsheetid>
    <display x="-45" y="-15" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="8b738129-6a62-4437-9aa4-8ef9e93b702f" name="script" type="Data">
    <subsheetid>72ebe8b9-0556-457c-83d7-77568d612485</subsheetid>
    <display x="-45" y="-105" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="22fe3f3d-5ad7-4ad3-989e-7c5eeeace797" name="inputs" type="Block">
    <subsheetid>72ebe8b9-0556-457c-83d7-77568d612485</subsheetid>
    <loginhibit />
    <display x="-105" y="-135" w="120" h="150" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="688b7744-842c-4b96-9b0a-8998b8b906fa" name="outputs" type="Block">
    <subsheetid>72ebe8b9-0556-457c-83d7-77568d612485</subsheetid>
    <loginhibit />
    <display x="-105" y="30" w="120" h="120" />
    <font family="Segoe UI" size="10" style="Regular" color="00FF00" />
  </stage>
  <stage stageid="91ac5942-ba60-4f79-bfa5-e9d0d370a1b2" name="bin" type="Data">
    <subsheetid>72ebe8b9-0556-457c-83d7-77568d612485</subsheetid>
    <loginhibit />
    <display x="-45" y="60" w="90" h="30" />
    <datatype>datetime</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="7a40869a-1707-4a26-a891-0596c0b69a5b" name="Get Flag" type="SubSheetInfo">
    <subsheetid>db814ed0-265b-4a00-8b3f-36db06407383</subsheetid>
    <narrative>This page will get Flag from python script.
Note: Make sure call back function should be return type and return Object should be bool</narrative>
    <display x="-210" y="15" w="150" h="90" />
  </stage>
  <stage stageid="be2d756e-09c2-4164-873a-c6d1ef2e86c3" name="function_name" type="Data">
    <subsheetid>db814ed0-265b-4a00-8b3f-36db06407383</subsheetid>
    <display x="-60" y="-45" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="b7d14225-7492-4722-ab36-e34cbe3d5d5e" name="Parameters(opt)" type="Collection">
    <subsheetid>db814ed0-265b-4a00-8b3f-36db06407383</subsheetid>
    <display x="-60" y="-15" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="9b2ac3cd-fa63-4eed-beac-a4f3db0c80a3" name="script" type="Data">
    <subsheetid>db814ed0-265b-4a00-8b3f-36db06407383</subsheetid>
    <display x="-60" y="-105" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="f191fe71-6781-499e-8881-580ad37dc381" name="inputs" type="Block">
    <subsheetid>db814ed0-265b-4a00-8b3f-36db06407383</subsheetid>
    <loginhibit />
    <display x="-120" y="-135" w="120" h="150" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="46d5f41a-b8b4-4813-9512-dc524e489e99" name="outputs" type="Block">
    <subsheetid>db814ed0-265b-4a00-8b3f-36db06407383</subsheetid>
    <loginhibit />
    <display x="-120" y="30" w="120" h="120" />
    <font family="Segoe UI" size="10" style="Regular" color="00FF00" />
  </stage>
  <stage stageid="21adae1e-4218-4425-9174-d3e059e75000" name="bin" type="Data">
    <subsheetid>db814ed0-265b-4a00-8b3f-36db06407383</subsheetid>
    <loginhibit />
    <display x="-60" y="90" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="faf91b7d-152a-4404-9377-ccc8e548a1f2" name="Get Image" type="SubSheetInfo">
    <subsheetid>52083995-a382-409e-a8ca-aa0638170e64</subsheetid>
    <narrative>This page will get Image from python script.
Note: Make sure call back function should be return type and return Object should be Bitmap</narrative>
    <display x="-240" y="0" w="150" h="90" />
  </stage>
  <stage stageid="e02bd297-615f-4ef3-8863-3fc55d5ccb4f" name="function_name" type="Data">
    <subsheetid>52083995-a382-409e-a8ca-aa0638170e64</subsheetid>
    <display x="-90" y="-60" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="9b1d2727-01f3-4ef6-9688-8990c7c8e006" name="Parameters(opt)" type="Collection">
    <subsheetid>52083995-a382-409e-a8ca-aa0638170e64</subsheetid>
    <display x="-90" y="-30" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="b094499a-9a0c-4c54-920c-256a2a003bd1" name="script" type="Data">
    <subsheetid>52083995-a382-409e-a8ca-aa0638170e64</subsheetid>
    <display x="-90" y="-120" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="dbcca4ba-4e39-4169-a305-da2d74237a85" name="inputs" type="Block">
    <subsheetid>52083995-a382-409e-a8ca-aa0638170e64</subsheetid>
    <loginhibit />
    <display x="-150" y="-150" w="120" h="150" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="626c4e4c-8b0a-4863-9854-4dacf0b78bfe" name="outputs" type="Block">
    <subsheetid>52083995-a382-409e-a8ca-aa0638170e64</subsheetid>
    <loginhibit />
    <display x="-150" y="15" w="120" h="120" />
    <font family="Segoe UI" size="10" style="Regular" color="00FF00" />
  </stage>
  <stage stageid="fd7f9ea1-8e01-40c9-b2c9-00ed50f8d707" name="bin" type="Data">
    <subsheetid>52083995-a382-409e-a8ca-aa0638170e64</subsheetid>
    <loginhibit />
    <display x="-90" y="45" w="90" h="30" />
    <datatype>image</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="e39ae01f-4704-4d36-8c33-5dbb920db193" name="Get Number" type="SubSheetInfo">
    <subsheetid>8056d7fb-b380-4ba6-907e-31badc015322</subsheetid>
    <narrative>This page will get Number from python script.
Note: Make sure call back function should be return type and return Object should be Decimal</narrative>
    <display x="-345" y="60" w="150" h="90" />
  </stage>
  <stage stageid="912a98bf-07dd-4bec-a4ce-f4afb2d2fcc2" name="function_name" type="Data">
    <subsheetid>8056d7fb-b380-4ba6-907e-31badc015322</subsheetid>
    <display x="-195" y="0" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="210b30fa-86db-4fac-a873-fd59607b9962" name="Parameters(opt)" type="Collection">
    <subsheetid>8056d7fb-b380-4ba6-907e-31badc015322</subsheetid>
    <display x="-195" y="30" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="4c46dee0-d9ed-4166-b148-413e92e9239b" name="script" type="Data">
    <subsheetid>8056d7fb-b380-4ba6-907e-31badc015322</subsheetid>
    <display x="-195" y="-60" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="12a74a56-e875-468c-b8db-909b8f027e47" name="inputs" type="Block">
    <subsheetid>8056d7fb-b380-4ba6-907e-31badc015322</subsheetid>
    <loginhibit />
    <display x="-255" y="-90" w="120" h="150" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="32d058fa-cb1e-4e4d-957a-6f5a9c1100c9" name="outputs" type="Block">
    <subsheetid>8056d7fb-b380-4ba6-907e-31badc015322</subsheetid>
    <loginhibit />
    <display x="-255" y="75" w="120" h="120" />
    <font family="Segoe UI" size="10" style="Regular" color="00FF00" />
  </stage>
  <stage stageid="28a520d3-6950-4b7d-b5c2-d670cfb27003" name="bin" type="Data">
    <subsheetid>8056d7fb-b380-4ba6-907e-31badc015322</subsheetid>
    <loginhibit />
    <display x="-195" y="105" w="90" h="30" />
    <datatype>number</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="c53ae80c-19c1-4757-b5c8-2432687426f3" name="Get Time" type="SubSheetInfo">
    <subsheetid>287e8629-16ba-4635-bbbe-2b20e73bdc7f</subsheetid>
    <narrative>This page will get Time from python script.
Note: Make sure call back function should be return type and return Object should be DateTime</narrative>
    <display x="-345" y="60" w="150" h="90" />
  </stage>
  <stage stageid="e7176fde-ff7f-4d5e-9dba-c7ba8b522035" name="function_name" type="Data">
    <subsheetid>287e8629-16ba-4635-bbbe-2b20e73bdc7f</subsheetid>
    <display x="-195" y="0" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="b04a40ec-46fc-4d3f-a053-f9d79786d0fc" name="Parameters(opt)" type="Collection">
    <subsheetid>287e8629-16ba-4635-bbbe-2b20e73bdc7f</subsheetid>
    <display x="-195" y="30" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="19f698ad-55a4-4a25-bc0a-a8c92d9e6a68" name="script" type="Data">
    <subsheetid>287e8629-16ba-4635-bbbe-2b20e73bdc7f</subsheetid>
    <display x="-195" y="-60" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="d632ff61-b97d-42d5-84c2-6ea28b75a16f" name="inputs" type="Block">
    <subsheetid>287e8629-16ba-4635-bbbe-2b20e73bdc7f</subsheetid>
    <loginhibit />
    <display x="-255" y="-90" w="120" h="150" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="2c940cf5-d1c0-4689-8bc4-6b6bf9c51474" name="outputs" type="Block">
    <subsheetid>287e8629-16ba-4635-bbbe-2b20e73bdc7f</subsheetid>
    <loginhibit />
    <display x="-255" y="75" w="120" h="120" />
    <font family="Segoe UI" size="10" style="Regular" color="00FF00" />
  </stage>
  <stage stageid="1604b875-c055-4405-abf9-986f5d8c4ed2" name="bin" type="Data">
    <subsheetid>287e8629-16ba-4635-bbbe-2b20e73bdc7f</subsheetid>
    <loginhibit />
    <display x="-195" y="105" w="90" h="30" />
    <datatype>time</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="fe842f06-258c-49e1-afc9-77ca2443b2e1" name="Get TimeSpan" type="SubSheetInfo">
    <subsheetid>4b5acbc4-b880-4e0c-9373-aa2f7116ebf0</subsheetid>
    <narrative>This page will get TimeSpan from python script.
Note: Make sure call back function should be return type and return Object should be TimeSpan</narrative>
    <display x="-345" y="30" w="150" h="90" />
  </stage>
  <stage stageid="97b81f37-bff2-4694-8baf-9decda9e7feb" name="function_name" type="Data">
    <subsheetid>4b5acbc4-b880-4e0c-9373-aa2f7116ebf0</subsheetid>
    <display x="-195" y="-15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="d7b47000-be3d-4079-b853-56d68282173f" name="Parameters(opt)" type="Collection">
    <subsheetid>4b5acbc4-b880-4e0c-9373-aa2f7116ebf0</subsheetid>
    <display x="-195" y="15" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="93310673-ba90-452b-bfd0-4917c39f3ba1" name="script" type="Data">
    <subsheetid>4b5acbc4-b880-4e0c-9373-aa2f7116ebf0</subsheetid>
    <display x="-195" y="-45" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="62636c35-77e8-48ee-8539-46901260fabf" name="inputs" type="Block">
    <subsheetid>4b5acbc4-b880-4e0c-9373-aa2f7116ebf0</subsheetid>
    <loginhibit />
    <display x="-255" y="-90" w="120" h="150" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="262f6c79-0082-44de-bf16-2b7271946608" name="outputs" type="Block">
    <subsheetid>4b5acbc4-b880-4e0c-9373-aa2f7116ebf0</subsheetid>
    <loginhibit />
    <display x="-255" y="75" w="120" h="120" />
    <font family="Segoe UI" size="10" style="Regular" color="00FF00" />
  </stage>
  <stage stageid="6b03636d-97c2-4882-9591-e76ba0482d41" name="bin" type="Data">
    <subsheetid>4b5acbc4-b880-4e0c-9373-aa2f7116ebf0</subsheetid>
    <loginhibit />
    <display x="-195" y="105" w="90" h="30" />
    <datatype>timespan</datatype>
    <initialvalue>0.00:00:00</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="e0e58dfa-fd4b-49f6-83a1-c31ea9810a80" name="Get Module List" type="SubSheetInfo">
    <subsheetid>f4d1d3e7-f73a-4554-bc89-fc17a380b590</subsheetid>
    <narrative>This page will get the installed module list.</narrative>
    <display x="-255" y="-30" w="150" h="90" />
  </stage>
  <stage stageid="9a308094-7831-4726-bd54-799fa3e20926" name="Start" type="Start">
    <subsheetid>f4d1d3e7-f73a-4554-bc89-fc17a380b590</subsheetid>
    <loginhibit />
    <display x="15" y="-90" />
    <onsuccess>56e2c6f6-3199-44ab-9af3-4949f300312a</onsuccess>
  </stage>
  <stage stageid="ec66ec6f-515e-4da9-b504-cab9fd04675e" name="outputs" type="Block">
    <subsheetid>f4d1d3e7-f73a-4554-bc89-fc17a380b590</subsheetid>
    <loginhibit />
    <display x="-165" y="-45" w="120" h="120" />
    <font family="Segoe UI" size="10" style="Regular" color="00FF00" />
  </stage>
  <stage stageid="415a0601-e3aa-42eb-9aa0-f6e8799f1c89" name="script_modules" type="Data">
    <subsheetid>f4d1d3e7-f73a-4554-bc89-fc17a380b590</subsheetid>
    <loginhibit />
    <display x="-105" y="-90" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue xml:space="preserve">from pkgutil import iter_modules
import clr
clr.AddReference('System.Data')
from System.Data import DataTable
def getModuleList():
 int_dt = DataTable()
 int_dt.Columns.Add("Module Name")
 for p in iter_modules():
  int_dt.Rows.Add(str(p.name))
 return int_dt</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="56e2c6f6-3199-44ab-9af3-4949f300312a" name="Get DataTable" type="SubSheet">
    <subsheetid>f4d1d3e7-f73a-4554-bc89-fc17a380b590</subsheetid>
    <loginhibit />
    <display x="15" y="-45" />
    <inputs>
      <input type="text" name="Callback Function Name*" friendlyname="Callback Function Name*" narrative="Call back function name (Don't include &quot;()&quot;)" expr="&quot;getModuleList&quot;" />
      <input type="text" name="PyScriptTextOrPyFilePath*" friendlyname="PyScriptTextOrPyFilePath*" narrative="please provide python script text or file path (.py or .pyc)" expr="[script_modules]" />
      <input type="collection" name="Parameters**" friendlyname="Parameters**" narrative="this parameters will pass to call back function" expr="" />
    </inputs>
    <outputs>
      <output type="text" name="Error Message" friendlyname="Error Message" stage="Error Message" />
      <output type="flag" name="Success" friendlyname="Success" stage="Success" />
      <output type="collection" name="Script_Output" friendlyname="Script_Output" stage="ModuleList" />
    </outputs>
    <onsuccess>8a51007a-6f74-4709-bbd3-8c8bec7d0727</onsuccess>
    <processid>0c8d485c-6b79-44b9-8bdd-ed05e727bf85</processid>
  </stage>
  <stage stageid="504ff7da-c3f9-4936-9605-2b615c00b7cf" name="ModuleList" type="Collection">
    <subsheetid>f4d1d3e7-f73a-4554-bc89-fc17a380b590</subsheetid>
    <display x="-105" y="-15" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="833028eb-0054-499e-9da8-bd66fb58f771" name="Local" type="Block">
    <subsheetid>f4d1d3e7-f73a-4554-bc89-fc17a380b590</subsheetid>
    <loginhibit />
    <display x="-165" y="-120" w="120" h="60" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="66600fc6-f865-4b14-9112-c7effa68cfe0" name="Install pip Module" type="SubSheetInfo">
    <subsheetid>378f1982-bc0b-480a-bf8a-1bc3b15ff4a1</subsheetid>
    <narrative>This page will install pip modules from https://pypi.org/</narrative>
    <display x="-210" y="-30" w="150" h="90" />
  </stage>
  <stage stageid="a9d89558-0374-40fa-bede-0692b896f833" name="Uninstall pip Module" type="SubSheetInfo">
    <subsheetid>f0441b78-8dea-453a-82b9-3bdad0c7e77d</subsheetid>
    <narrative>This page will uninstall modules.</narrative>
    <display x="-255" y="-30" w="150" h="90" />
  </stage>
  <stage stageid="9c24ceb8-108d-4668-a9f1-e3d7efa89dd9" name="Initialise" type="Code">
    <subsheetid>a1a1ddb2-cb46-41d6-9b3f-be704ac35078</subsheetid>
    <loginhibit />
    <display x="15" y="-30" />
    <inputs>
      <input type="text" name="pythonInstallationRootLocation" expr="[PythonRootFolderPath]" />
      <input type="number" name="pythonVersion" expr="[PythonVersion]" />
      <input type="number" name="globalWait" expr="[GlobalWait]" />
      <input type="flag" name="IsDebugMode" expr="[IsDeubg]" />
      <input type="flag" name="IsParamsPythonType" expr="[IsParamsPythonType]" />
    </inputs>
    <onsuccess>2a009f11-40c6-40ae-85aa-322b3338ce9b</onsuccess>
    <code><![CDATA[GlobalWait = (int)globalWait;
if(instance2 == null)
	instance2 = new PythonEngineWrapper(pythonInstallationRootLocation,(int)pythonVersion);
instance2._debug = IsParamsPythonType;
instance2._isParamsPythonType = IsDebugMode;]]></code>
  </stage>
  <stage stageid="812aa7f7-4377-473d-b9ab-6f121f558d0a" name="PythonVersion" type="Data">
    <subsheetid>a1a1ddb2-cb46-41d6-9b3f-be704ac35078</subsheetid>
    <display x="-105" y="-60" w="90" h="30" />
    <datatype>number</datatype>
    <initialvalue>312</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="79d85ed4-6c0a-4425-aa29-72b6427f66c3" name="PythonRootFolderPath" type="Data">
    <subsheetid>a1a1ddb2-cb46-41d6-9b3f-be704ac35078</subsheetid>
    <display x="-105" y="-30" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue xml:space="preserve">C:\Program Files\Python312</initialvalue>
    <alwaysinit />
  </stage>
  <stage stageid="205daba1-3a9c-4787-8e42-b44c99353051" name="Success" type="Data">
    <subsheetid>129ddb52-ef8f-414c-aa3d-d26eede6da01</subsheetid>
    <display x="-90" y="30" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="cdb198d0-4691-4670-9a7d-9bf76af2c22a" name="Error_Message" type="Data">
    <subsheetid>129ddb52-ef8f-414c-aa3d-d26eede6da01</subsheetid>
    <display x="-90" y="60" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="063f581d-c9c7-417d-906f-c6200e1e9b1c" name="Error_Message" type="Data">
    <subsheetid>f3bc5d65-3e82-4b37-8463-de3fc1a0a785</subsheetid>
    <display x="-105" y="15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="80dcafa7-16f1-4fb4-9aa7-0242968a4ef5" name="Success" type="Data">
    <subsheetid>f3bc5d65-3e82-4b37-8463-de3fc1a0a785</subsheetid>
    <display x="-105" y="45" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="0200bfb6-6145-43f8-83d9-6243367bd259" name="End" type="End">
    <subsheetid>c4856e06-6af6-462d-860e-39896eeba17f</subsheetid>
    <loginhibit />
    <display x="-75" y="0" />
    <outputs>
      <output type="text" name="Error Message" stage="Error_Message" />
      <output type="flag" name="Success" stage="Success" />
      <output type="text" name="Script_Output" stage="fun" />
    </outputs>
  </stage>
  <stage stageid="45cf3d00-3a22-49b4-aead-06084c8b666b" name="Error_Message" type="Data">
    <subsheetid>c4856e06-6af6-462d-860e-39896eeba17f</subsheetid>
    <display x="-195" y="60" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="37331580-b3e1-4e4d-85b4-26865f2db205" name="Success" type="Data">
    <subsheetid>c4856e06-6af6-462d-860e-39896eeba17f</subsheetid>
    <display x="-195" y="90" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="0f17db5e-2874-4717-bda8-b7e8a3066a95" name="Execute Py File" type="Code">
    <subsheetid>255c4778-f4fc-4bd8-b1b5-5e744212297e</subsheetid>
    <loginhibit />
    <display x="-75" y="-15" />
    <inputs>
      <input type="text" name="scr" expr="[file_name]" />
    </inputs>
    <outputs>
      <output type="flag" name="Success" stage="Success" />
      <output type="text" name="Error_Message" stage="Error_Message" />
    </outputs>
    <onsuccess>0db429f3-e8a2-439e-b36e-98bb1f277d14</onsuccess>
    <code><![CDATA[IsInitialised();
OutputResults result = null;

Task t = Task.Run(() => { 
result = instance2.ExecutePythonScript<object>(scr, null, null, true);
});
t.Wait(TimeSpan.FromSeconds(GlobalWait));

if(result == null){
	Success = false;
	Error_Message = "script or file_name is invalid or script execution timedout";
}else{
	Success = result.isSuccess;
	Error_Message = result.errorMessage;
}]]></code>
  </stage>
  <stage stageid="098b135f-a5cb-4635-8580-6226063bcade" name="End" type="End">
    <subsheetid>8b2b1c23-f78f-4dc4-b916-cf5d04a8a639</subsheetid>
    <loginhibit />
    <display x="60" y="30" />
    <outputs>
      <output type="text" name="Error Message" stage="Error_Message" />
      <output type="flag" name="Success" stage="Success" />
      <output type="binary" name="Script_Output" stage="bin" />
    </outputs>
  </stage>
  <stage stageid="f7db67f3-0e7e-403d-9934-9c413d2785de" name="Get Binary" type="Code">
    <subsheetid>8b2b1c23-f78f-4dc4-b916-cf5d04a8a639</subsheetid>
    <loginhibit />
    <display x="60" y="-15" />
    <inputs>
      <input type="text" name="script" expr="[script]" />
      <input type="text" name="function_name" expr="[function_name]" />
      <input type="collection" name="param" expr="[Parameters(opt)]" />
    </inputs>
    <outputs>
      <output type="binary" name="ret" stage="bin" />
      <output type="flag" name="Success" stage="Success" />
      <output type="text" name="Error_Message" stage="Error_Message" />
    </outputs>
    <onsuccess>098b135f-a5cb-4635-8580-6226063bcade</onsuccess>
    <code><![CDATA[IsInitialised();
OutputResults result = null;

Task t = Task.Run(() => { 
if(!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name) && (script.EndsWith(".py") || script.EndsWith(".pyc")) )
	result = instance2.ExecutePythonScript<Byte[]>(script, function_name, param,true);
else if (!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name))
	result = instance2.ExecutePythonScript<Byte[]>(script, function_name, param);
else result = null;
});
t.Wait(TimeSpan.FromSeconds(GlobalWait));
	
if(result == null){
	Success = false;
	Error_Message = "script or file_name is invalid or script execution timedout";
	ret = default(Byte[]);
}else{
	Success = result.isSuccess;
	Error_Message = result.errorMessage;
	if(result.outResult != null)
		ret = (Byte[])result.outResult;
	else ret = default(Byte[]);
}]]></code>
  </stage>
  <stage stageid="cdf51a41-5cbf-4405-bdc5-bacfada1b229" name="Error_Message" type="Data">
    <subsheetid>8b2b1c23-f78f-4dc4-b916-cf5d04a8a639</subsheetid>
    <display x="-60" y="90" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="3236d789-d660-4d12-9742-2f78c2b87787" name="Success" type="Data">
    <subsheetid>8b2b1c23-f78f-4dc4-b916-cf5d04a8a639</subsheetid>
    <display x="-60" y="120" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="42452f06-3da2-4382-a3e5-0f08d5e134d3" name="Get DataTable" type="Code">
    <subsheetid>0c8d485c-6b79-44b9-8bdd-ed05e727bf85</subsheetid>
    <loginhibit />
    <display x="75" y="-15" />
    <inputs>
      <input type="text" name="script" expr="[script]" />
      <input type="text" name="function_name" expr="[function_name]" />
      <input type="collection" name="param" expr="[Parameters(opt)]" />
    </inputs>
    <outputs>
      <output type="collection" name="outParam" stage="bin" />
      <output type="flag" name="Success" stage="Success" />
      <output type="text" name="Error_Message" stage="Error_Message" />
    </outputs>
    <onsuccess>7143ad51-8d66-43a7-b335-a64b72618dff</onsuccess>
    <code><![CDATA[IsInitialised();
OutputResults result = null;

Task t = Task.Run(() => { 
if(!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name) && (script.EndsWith(".py") || script.EndsWith(".pyc")) )
	result = instance2.ExecutePythonScript<DataTable>(script, function_name, param,true);
else if (!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name))
	result = instance2.ExecutePythonScript<DataTable>(script, function_name, param);
else result = null;
});
t.Wait(TimeSpan.FromSeconds(GlobalWait));

if(result == null){
	Success = false;
	Error_Message = "script or file_name is invalid or script execution timedout";
	outParam = default(DataTable);
}else{
	Success = result.isSuccess;
	Error_Message = result.errorMessage;
	if(result.outResult != null)
		outParam = (DataTable)result.outResult;
	else outParam = default(DataTable);
}]]></code>
  </stage>
  <stage stageid="f121d5a9-23f8-4c9d-9d2d-d6294032d6c4" name="Error_Message" type="Data">
    <subsheetid>0c8d485c-6b79-44b9-8bdd-ed05e727bf85</subsheetid>
    <display x="-45" y="90" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="5716d30d-59d3-4aa8-b72a-cfb6687caa33" name="Success" type="Data">
    <subsheetid>0c8d485c-6b79-44b9-8bdd-ed05e727bf85</subsheetid>
    <display x="-45" y="120" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="180f1b78-b143-43b7-9455-28e4e7f4922c" name="Get Date" type="Code">
    <subsheetid>63f66cd9-d661-4291-b7c2-a2cb6b7891b5</subsheetid>
    <loginhibit />
    <display x="60" y="15" />
    <inputs>
      <input type="text" name="script" expr="[script]" />
      <input type="text" name="function_name" expr="[function_name]" />
      <input type="collection" name="param" expr="[Parameters(opt)]" />
    </inputs>
    <outputs>
      <output type="date" name="outParam" stage="bin" />
      <output type="flag" name="Success" stage="Success" />
      <output type="text" name="Error_Message" stage="Error_Message" />
    </outputs>
    <onsuccess>eafea93d-777e-4cdf-8ddc-e3d7499f7200</onsuccess>
    <code><![CDATA[IsInitialised();
OutputResults result = null;

Task t = Task.Run(() => { 
if(!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name) && (script.EndsWith(".py") || script.EndsWith(".pyc")) )
	result = instance2.ExecutePythonScript<DateTime>(script, function_name, param,true);
else if (!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name))
	result = instance2.ExecutePythonScript<DateTime>(script, function_name, param);
else result = null;
});
t.Wait(TimeSpan.FromSeconds(GlobalWait));
	
if(result == null){
	Success = false;
	Error_Message = "script or file_name is invalid or script execution timedout";
	outParam = default(DateTime);
}else{
	Success = result.isSuccess;
	Error_Message = result.errorMessage;
	if(result.outResult != null)
		outParam = (DateTime)result.outResult;
	else outParam = default(DateTime);
}]]></code>
  </stage>
  <stage stageid="09eda437-6172-43c9-81d6-00503d250d4f" name="Error_Message" type="Data">
    <subsheetid>63f66cd9-d661-4291-b7c2-a2cb6b7891b5</subsheetid>
    <display x="-60" y="105" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="928b0d4e-8728-4553-8e6c-2ac660235a7c" name="Success" type="Data">
    <subsheetid>63f66cd9-d661-4291-b7c2-a2cb6b7891b5</subsheetid>
    <display x="-60" y="135" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="8fd51b66-7c42-4b7b-96ef-7e858edfd390" name="Get DateTime" type="Code">
    <subsheetid>72ebe8b9-0556-457c-83d7-77568d612485</subsheetid>
    <loginhibit />
    <display x="75" y="0" />
    <inputs>
      <input type="text" name="script" expr="[script]" />
      <input type="text" name="function_name" expr="[function_name]" />
      <input type="collection" name="param" expr="[Parameters(opt)]" />
    </inputs>
    <outputs>
      <output type="date" name="outParam" stage="bin" />
      <output type="flag" name="Success" stage="Success" />
      <output type="text" name="Error_Message" stage="Error_Message" />
    </outputs>
    <onsuccess>11dc1672-892f-4a78-9fc4-db7abce5aeef</onsuccess>
    <code><![CDATA[IsInitialised();
OutputResults result = null;

Task t = Task.Run(() => { 
if(!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name) && (script.EndsWith(".py") || script.EndsWith(".pyc")) )
	result = instance2.ExecutePythonScript<DateTime>(script, function_name, param,true);
else if (!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name))
	result = instance2.ExecutePythonScript<DateTime>(script, function_name, param);
else result = null;
});
t.Wait(TimeSpan.FromSeconds(GlobalWait));

if(result == null){
	Success = false;
	Error_Message = "script or file_name is invalid or script execution timedout";
	outParam = default(DateTime);
}else{
	Success = result.isSuccess;
	Error_Message = result.errorMessage;
	if(result.outResult != null)
		outParam = (DateTime)result.outResult;
	else outParam = default(DateTime);
}]]></code>
  </stage>
  <stage stageid="6283face-20d0-42f7-b54f-1dcc1f2c5cbb" name="Error_Message" type="Data">
    <subsheetid>72ebe8b9-0556-457c-83d7-77568d612485</subsheetid>
    <display x="-45" y="90" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="38c04b99-98b3-4e4d-aefa-73bc86a30dcd" name="Success" type="Data">
    <subsheetid>72ebe8b9-0556-457c-83d7-77568d612485</subsheetid>
    <display x="-45" y="120" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="501cea95-fd91-44cf-a7e4-494cca18c3fe" name="Get Flag" type="Code">
    <subsheetid>db814ed0-265b-4a00-8b3f-36db06407383</subsheetid>
    <loginhibit />
    <display x="60" y="0" />
    <inputs>
      <input type="text" name="script" expr="[script]" />
      <input type="text" name="function_name" expr="[function_name]" />
      <input type="collection" name="param" expr="[Parameters(opt)]" />
    </inputs>
    <outputs>
      <output type="flag" name="outParam" stage="bin" />
      <output type="flag" name="Success" stage="Success" />
      <output type="text" name="Error_Message" stage="Error_Message" />
    </outputs>
    <onsuccess>746b6087-5b0c-4dc6-8b42-e689177591d5</onsuccess>
    <code><![CDATA[IsInitialised();
OutputResults result = null;

Task t = Task.Run(() => { 
if(!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name) && (script.EndsWith(".py") || script.EndsWith(".pyc")) )
	result = instance2.ExecutePythonScript<Boolean>(script, function_name, param,true);
else if (!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name))
	result = instance2.ExecutePythonScript<Boolean>(script, function_name, param);
else result = null;
});
t.Wait(TimeSpan.FromSeconds(GlobalWait));
	
if(result == null){
	Success = false;
	Error_Message = "script or file_name is invalid or script execution timedout";
	outParam = false;
}else{
	Success = result.isSuccess;
	Error_Message = result.errorMessage;
	if(result.outResult != null)
		outParam = (Boolean)result.outResult;
	else outParam = false;
}]]></code>
  </stage>
  <stage stageid="206064df-b5d3-4f01-b7c4-6c8116f3b222" name="Error_Message" type="Data">
    <subsheetid>db814ed0-265b-4a00-8b3f-36db06407383</subsheetid>
    <display x="-60" y="60" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="935767fb-0947-45cb-a39d-bbc079a1219b" name="Success" type="Data">
    <subsheetid>db814ed0-265b-4a00-8b3f-36db06407383</subsheetid>
    <display x="-60" y="120" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="fd15622e-d646-483a-ba56-017aefc30713" name="Get Image" type="Code">
    <subsheetid>52083995-a382-409e-a8ca-aa0638170e64</subsheetid>
    <loginhibit />
    <display x="30" y="-45" />
    <inputs>
      <input type="text" name="script" expr="[script]" />
      <input type="text" name="function_name" expr="[function_name]" />
      <input type="collection" name="param" expr="[Parameters(opt)]" />
    </inputs>
    <outputs>
      <output type="image" name="outParam" stage="bin" />
      <output type="flag" name="Success" stage="Success" />
      <output type="text" name="Error_Message" stage="Error_Message" />
    </outputs>
    <onsuccess>4a362f23-ed9e-421d-94f8-6b4de81121b2</onsuccess>
    <code><![CDATA[IsInitialised();
OutputResults result = null;

Task t = Task.Run(() => { 
if(!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name) && (script.EndsWith(".py") || script.EndsWith(".pyc")) )
	result = instance2.ExecutePythonScript<Bitmap>(script, function_name, param,true);
else if (!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name))
	result = instance2.ExecutePythonScript<Bitmap>(script, function_name, param);
else result = null;
});
t.Wait(TimeSpan.FromSeconds(GlobalWait));

if(result == null){
	Success = false;
	Error_Message = "script or file_name is invalid or script execution timedout";
	outParam = default(Bitmap);
}else{
	Success = result.isSuccess;
	Error_Message = result.errorMessage;
	if(result.outResult != null)
		outParam = (Bitmap)result.outResult;
	else outParam = default(Bitmap);
}]]></code>
  </stage>
  <stage stageid="66855747-8e65-42d0-8c1d-20aa4e9952f4" name="Error_Message" type="Data">
    <subsheetid>52083995-a382-409e-a8ca-aa0638170e64</subsheetid>
    <display x="-90" y="75" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="8cf1b82d-a393-4c29-a437-8f79b597d213" name="Success" type="Data">
    <subsheetid>52083995-a382-409e-a8ca-aa0638170e64</subsheetid>
    <display x="-90" y="105" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="5660f9cd-9d33-4df6-a64d-dc65993c0d3e" name="Get Number" type="Code">
    <subsheetid>8056d7fb-b380-4ba6-907e-31badc015322</subsheetid>
    <loginhibit />
    <display x="-75" y="30" />
    <inputs>
      <input type="text" name="script" expr="[script]" />
      <input type="text" name="function_name" expr="[function_name]" />
      <input type="collection" name="param" expr="[Parameters(opt)]" />
    </inputs>
    <outputs>
      <output type="number" name="outParam" stage="bin" />
      <output type="flag" name="Success" stage="Success" />
      <output type="text" name="Error_Message" stage="Error_Message" />
    </outputs>
    <onsuccess>f93fdbaa-6731-4f5d-a318-3e656e4595b2</onsuccess>
    <code><![CDATA[IsInitialised();
OutputResults result = null;

Task t = Task.Run(() => { 
if(!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name) && (script.EndsWith(".py") || script.EndsWith(".pyc")) )
	result = instance2.ExecutePythonScript<Decimal>(script, function_name, param,true);
else if (!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name))
	result = instance2.ExecutePythonScript<Decimal>(script, function_name, param);
else result = null;
});
t.Wait(TimeSpan.FromSeconds(GlobalWait));
	
if(result == null){
	Success = false;
	Error_Message = "script or file_name is invalid or script execution timedout";
	outParam = default(Decimal);
}else{
	Success = result.isSuccess;
	Error_Message = result.errorMessage;
	if(result.outResult != null)
		outParam = (Decimal)result.outResult;
	else outParam = default(Decimal);
}]]></code>
  </stage>
  <stage stageid="715bd3fb-e52f-49b3-8915-7d5b55014b6d" name="Error_Message" type="Data">
    <subsheetid>8056d7fb-b380-4ba6-907e-31badc015322</subsheetid>
    <display x="-195" y="135" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="2a9e0472-d3b0-4410-bd50-324a3171f7f3" name="Success" type="Data">
    <subsheetid>8056d7fb-b380-4ba6-907e-31badc015322</subsheetid>
    <display x="-195" y="165" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="6b5ca655-a694-4522-bed5-bbbac51f2036" name="Get Time" type="Code">
    <subsheetid>287e8629-16ba-4635-bbbe-2b20e73bdc7f</subsheetid>
    <loginhibit />
    <display x="-75" y="30" />
    <inputs>
      <input type="text" name="script" expr="[script]" />
      <input type="text" name="function_name" expr="[function_name]" />
      <input type="collection" name="param" expr="[Parameters(opt)]" />
    </inputs>
    <outputs>
      <output type="time" name="outParam" stage="bin" />
      <output type="flag" name="Success" stage="Success" />
      <output type="text" name="Error_Message" stage="Error_Message" />
    </outputs>
    <onsuccess>f368230d-4568-4c16-ab9b-442b90962f6e</onsuccess>
    <code><![CDATA[IsInitialised();
OutputResults result = null;

Task t = Task.Run(() => { 
if(!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name) && (script.EndsWith(".py") || script.EndsWith(".pyc")) )
	result = instance2.ExecutePythonScript<DateTime>(script, function_name, param,true);
else if (!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name))
	result = instance2.ExecutePythonScript<DateTime>(script, function_name, param);
else result = null;
});
t.Wait(TimeSpan.FromSeconds(GlobalWait));
	
if(result == null){
	Success = false;
	Error_Message = "script or file_name is invalid or script execution timedout";
	outParam = default(DateTime);
}else{
	Success = result.isSuccess;
	Error_Message = result.errorMessage;
	if(result.outResult != null)
		outParam = (DateTime)result.outResult;
	else outParam = default(DateTime);
}]]></code>
  </stage>
  <stage stageid="ac552588-d599-485b-bb0c-d874776a0fae" name="Error_Message" type="Data">
    <subsheetid>287e8629-16ba-4635-bbbe-2b20e73bdc7f</subsheetid>
    <display x="-195" y="135" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="8b538dd9-3f48-4018-b440-9cb3ef44e2fc" name="Success" type="Data">
    <subsheetid>287e8629-16ba-4635-bbbe-2b20e73bdc7f</subsheetid>
    <display x="-195" y="165" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="2553dc7c-6b7f-484f-8ccb-75ac5bbb3219" name="Get TimeSpan" type="Code">
    <subsheetid>4b5acbc4-b880-4e0c-9373-aa2f7116ebf0</subsheetid>
    <loginhibit />
    <display x="-75" y="0" />
    <inputs>
      <input type="text" name="script" expr="[script]" />
      <input type="text" name="function_name" expr="[function_name]" />
      <input type="collection" name="param" expr="[Parameters(opt)]" />
    </inputs>
    <outputs>
      <output type="timespan" name="outParam" stage="bin" />
      <output type="flag" name="Success" stage="Success" />
      <output type="text" name="Error_Message" stage="Error_Message" />
    </outputs>
    <onsuccess>c7ec70ce-5dcb-4f5b-bfdd-ca9769a09dc2</onsuccess>
    <code><![CDATA[IsInitialised();
OutputResults result = null;

Task t = Task.Run(() => { 
if(!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name) && (script.EndsWith(".py") || script.EndsWith(".pyc")) )
	result = instance2.ExecutePythonScript<TimeSpan>(script, function_name, param,true);
else if (!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name))
	result = instance2.ExecutePythonScript<TimeSpan>(script, function_name, param);
else result = null;
});
t.Wait(TimeSpan.FromSeconds(GlobalWait));
	
if(result == null){
	Success = false;
	Error_Message = "script or file_name is invalid or script execution timedout";
	outParam = default(TimeSpan);
}else{
	Success = result.isSuccess;
	Error_Message = result.errorMessage;
	if(result.outResult != null)
		outParam = (TimeSpan)result.outResult;
	else outParam = default(TimeSpan);
}]]></code>
  </stage>
  <stage stageid="0854f9c2-46f7-48ef-addd-15d2b698e5f0" name="Error_Message" type="Data">
    <subsheetid>4b5acbc4-b880-4e0c-9373-aa2f7116ebf0</subsheetid>
    <display x="-195" y="135" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="ca328b57-f9cd-4b78-bb0b-e27e34159619" name="Success" type="Data">
    <subsheetid>4b5acbc4-b880-4e0c-9373-aa2f7116ebf0</subsheetid>
    <display x="-195" y="165" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="b3eca7ff-e265-474b-b315-1ca3768e4267" name="GlobalWait" type="Data">
    <subsheetid>a1a1ddb2-cb46-41d6-9b3f-be704ac35078</subsheetid>
    <display x="-105" y="0" w="90" h="30" />
    <datatype>number</datatype>
    <initialvalue>30</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="0db429f3-e8a2-439e-b36e-98bb1f277d14" name="End" type="End">
    <subsheetid>255c4778-f4fc-4bd8-b1b5-5e744212297e</subsheetid>
    <loginhibit />
    <display x="-75" y="30" />
    <outputs>
      <output type="text" name="Error Message" stage="Error_Message" />
      <output type="flag" name="Success" stage="Success" />
    </outputs>
  </stage>
  <stage stageid="7143ad51-8d66-43a7-b335-a64b72618dff" name="End" type="End">
    <subsheetid>0c8d485c-6b79-44b9-8bdd-ed05e727bf85</subsheetid>
    <loginhibit />
    <display x="75" y="30" />
    <outputs>
      <output type="text" name="Error Message" stage="Error_Message" />
      <output type="flag" name="Success" stage="Success" />
      <output type="collection" name="Script_Output" stage="bin" />
    </outputs>
  </stage>
  <stage stageid="eb31ce51-4634-46a6-b87a-040373c70b16" name="Error Message" type="Data">
    <subsheetid>f4d1d3e7-f73a-4554-bc89-fc17a380b590</subsheetid>
    <display x="-105" y="15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="c15bd2c1-aa73-4a37-84c2-7c9007cb3ee1" name="Success" type="Data">
    <subsheetid>f4d1d3e7-f73a-4554-bc89-fc17a380b590</subsheetid>
    <display x="-105" y="45" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="8a51007a-6f74-4709-bbd3-8c8bec7d0727" name="End" type="End">
    <subsheetid>f4d1d3e7-f73a-4554-bc89-fc17a380b590</subsheetid>
    <loginhibit />
    <display x="15" y="0" />
    <outputs>
      <output type="text" name="Error Message" stage="Error Message" />
      <output type="flag" name="Success" stage="Success" />
      <output type="collection" name="Script_Output" stage="ModuleList" />
    </outputs>
  </stage>
  <stage stageid="eafea93d-777e-4cdf-8ddc-e3d7499f7200" name="End" type="End">
    <subsheetid>63f66cd9-d661-4291-b7c2-a2cb6b7891b5</subsheetid>
    <loginhibit />
    <display x="60" y="60" />
    <outputs>
      <output type="text" name="Error Message" stage="Error_Message" />
      <output type="flag" name="Success" stage="Success" />
      <output type="date" name="Script_Output" stage="bin" />
    </outputs>
  </stage>
  <stage stageid="11dc1672-892f-4a78-9fc4-db7abce5aeef" name="End" type="End">
    <subsheetid>72ebe8b9-0556-457c-83d7-77568d612485</subsheetid>
    <loginhibit />
    <display x="75" y="45" />
    <outputs>
      <output type="text" name="Error Message" stage="Error_Message" />
      <output type="flag" name="Success" stage="Success" />
      <output type="datetime" name="Script_Output" stage="bin" />
    </outputs>
  </stage>
  <stage stageid="746b6087-5b0c-4dc6-8b42-e689177591d5" name="End" type="End">
    <subsheetid>db814ed0-265b-4a00-8b3f-36db06407383</subsheetid>
    <loginhibit />
    <display x="60" y="45" />
    <outputs>
      <output type="text" name="Error Message" stage="Error_Message" />
      <output type="flag" name="Success" stage="Success" />
      <output type="flag" name="Script_Output" stage="bin" />
    </outputs>
  </stage>
  <stage stageid="4a362f23-ed9e-421d-94f8-6b4de81121b2" name="End" type="End">
    <subsheetid>52083995-a382-409e-a8ca-aa0638170e64</subsheetid>
    <loginhibit />
    <display x="30" y="0" />
    <outputs>
      <output type="text" name="Error Message" stage="Error_Message" />
      <output type="flag" name="Success" stage="Success" />
      <output type="image" name="Script_Output" stage="bin" />
    </outputs>
  </stage>
  <stage stageid="f93fdbaa-6731-4f5d-a318-3e656e4595b2" name="End" type="End">
    <subsheetid>8056d7fb-b380-4ba6-907e-31badc015322</subsheetid>
    <loginhibit />
    <display x="-75" y="75" />
    <outputs>
      <output type="text" name="Error Message" stage="Error_Message" />
      <output type="flag" name="Success" stage="Success" />
      <output type="number" name="Script_Output" stage="bin" />
    </outputs>
  </stage>
  <stage stageid="f368230d-4568-4c16-ab9b-442b90962f6e" name="End" type="End">
    <subsheetid>287e8629-16ba-4635-bbbe-2b20e73bdc7f</subsheetid>
    <loginhibit />
    <display x="-75" y="75" />
    <outputs>
      <output type="text" name="Error Message" stage="Error_Message" />
      <output type="flag" name="Success" stage="Success" />
      <output type="time" name="Script_Output" stage="bin" />
    </outputs>
  </stage>
  <stage stageid="c7ec70ce-5dcb-4f5b-bfdd-ca9769a09dc2" name="End" type="End">
    <subsheetid>4b5acbc4-b880-4e0c-9373-aa2f7116ebf0</subsheetid>
    <loginhibit />
    <display x="-75" y="45" />
    <outputs>
      <output type="text" name="Error Message" stage="Error_Message" />
      <output type="flag" name="Success" stage="Success" />
      <output type="timespan" name="Script_Output" stage="bin" />
    </outputs>
  </stage>
  <stage stageid="3212c058-ed19-46d2-9fc0-57a2cd7a8cba" name="Start" type="Start">
    <subsheetid>378f1982-bc0b-480a-bf8a-1bc3b15ff4a1</subsheetid>
    <loginhibit />
    <display x="60" y="-105" />
    <inputs>
      <input type="text" name="Module Name*" narrative="pip module name(don't include pip install module name)" stage="Module Name" />
    </inputs>
    <onsuccess>d98b7e1b-5471-40ed-8315-f55576ab9460</onsuccess>
  </stage>
  <stage stageid="06a1e52a-3e7f-4b4d-bf93-2610800e4979" name="Module Name" type="Data">
    <subsheetid>378f1982-bc0b-480a-bf8a-1bc3b15ff4a1</subsheetid>
    <display x="-60" y="-120" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue xml:space="preserve">numpy</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="6d930db6-8a3b-4efe-ade0-c80ff692923c" name="inputs" type="Block">
    <subsheetid>378f1982-bc0b-480a-bf8a-1bc3b15ff4a1</subsheetid>
    <loginhibit />
    <display x="-120" y="-150" w="120" h="60" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="537eb5a5-62ad-4e10-aa43-c5af2a702dcd" name="outputs" type="Block">
    <subsheetid>378f1982-bc0b-480a-bf8a-1bc3b15ff4a1</subsheetid>
    <loginhibit />
    <display x="-120" y="0" w="120" h="120" />
    <font family="Segoe UI" size="10" style="Regular" color="00FF00" />
  </stage>
  <stage stageid="c19cb9c5-76c8-4d67-be75-d723abaad78e" name="getTextFromPyScript" type="SubSheet">
    <subsheetid>378f1982-bc0b-480a-bf8a-1bc3b15ff4a1</subsheetid>
    <loginhibit />
    <display x="60" y="-15" />
    <inputs>
      <input type="text" name="script(mand)" friendlyname="script(mand)" narrative="python script string" expr="[Script]" />
      <input type="text" name="call_back_function_name(mand)" friendlyname="call_back_function_name(mand)" narrative="Call back function name (Don't include &quot;()&quot;)" expr="&quot;install&quot;" />
      <input type="collection" name="Parameters(opt)" friendlyname="Parameters(opt)" narrative="this parameters will pass to function" expr="" />
    </inputs>
    <outputs>
      <output type="text" name="string" friendlyname="string" narrative="This is output from python script" stage="string" />
      <output type="flag" name="Suucess" friendlyname="Suucess" stage="Success" />
      <output type="text" name="Error Message" friendlyname="Error Message" stage="Error Message" />
    </outputs>
    <onsuccess>cd0e1928-b539-4ded-b095-deccccf380af</onsuccess>
    <processid>129ddb52-ef8f-414c-aa3d-d26eede6da01</processid>
  </stage>
  <stage stageid="1b006ff9-5643-49bd-8fac-94ab96964a48" name="Script" type="Data">
    <subsheetid>378f1982-bc0b-480a-bf8a-1bc3b15ff4a1</subsheetid>
    <loginhibit />
    <display x="-60" y="-45" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="d98b7e1b-5471-40ed-8315-f55576ab9460" name="Parse Script" type="Calculation">
    <subsheetid>378f1982-bc0b-480a-bf8a-1bc3b15ff4a1</subsheetid>
    <loginhibit />
    <display x="60" y="-60" />
    <onsuccess>c19cb9c5-76c8-4d67-be75-d723abaad78e</onsuccess>
    <calculation expression="&quot;import subprocess&quot;&amp;NewLine()&amp;&quot;&#xA;import sys&quot;&amp;NewLine()&amp;&quot;&#xA;import traceback&quot;&amp;NewLine()&amp;&quot;&#xA;&#xA;def install():&quot;&amp;NewLine()&amp;&quot;&#xA; try:&quot;&amp;NewLine()&amp;&quot;&#xA;  resu = subprocess.check_output([r'&quot;&amp;[PythonRootFolderPath]&amp;&quot;\python.exe', '-m', 'pip', 'install', '&quot;&amp;[Module Name]&amp;&quot;'], shell=False)&quot;&amp;NewLine()&amp;&quot;&#xA;  return str(resu.decode('utf-8'))&quot;&amp;NewLine()&amp;&quot;&#xA; except Exception as e:&quot;&amp;NewLine()&amp;&quot;&#xA;  return f'Error: {str(e)}\n{traceback.format_exc()}'&quot;&#xA;" stage="Script" />
  </stage>
  <stage stageid="973c53c9-3c7b-4ec8-b35d-1318227f3574" name="Success" type="Data">
    <subsheetid>378f1982-bc0b-480a-bf8a-1bc3b15ff4a1</subsheetid>
    <display x="-60" y="60" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="74cdc901-8550-4c81-b328-e24cd378ff98" name="Error Message" type="Data">
    <subsheetid>378f1982-bc0b-480a-bf8a-1bc3b15ff4a1</subsheetid>
    <display x="-60" y="90" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="dcf56432-30e2-4e7b-b121-c00ca5500df3" name="string" type="Data">
    <subsheetid>378f1982-bc0b-480a-bf8a-1bc3b15ff4a1</subsheetid>
    <display x="-60" y="30" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="cd0e1928-b539-4ded-b095-deccccf380af" name="End" type="End">
    <subsheetid>378f1982-bc0b-480a-bf8a-1bc3b15ff4a1</subsheetid>
    <loginhibit />
    <display x="60" y="30" />
    <outputs>
      <output type="text" name="Error Message" stage="Error Message" />
      <output type="flag" name="Success" stage="Success" />
      <output type="text" name="Script_Output" stage="string" />
    </outputs>
  </stage>
  <stage stageid="78478eca-b7b5-4f49-b333-bf1fd421bd4c" name="Start" type="Start">
    <subsheetid>f0441b78-8dea-453a-82b9-3bdad0c7e77d</subsheetid>
    <loginhibit />
    <display x="15" y="-90" />
    <inputs>
      <input type="text" name="Module Name*" narrative="pip module name(don't include pip install module name)" stage="Module Name" />
    </inputs>
    <onsuccess>710db6c4-50b6-4359-91c4-78673dffcb78</onsuccess>
  </stage>
  <stage stageid="41ca1f89-a608-43d9-a6fd-26b26434cb4b" name="Module Name" type="Data">
    <subsheetid>f0441b78-8dea-453a-82b9-3bdad0c7e77d</subsheetid>
    <display x="-105" y="-120" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue xml:space="preserve">numpy</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="3867bc0b-80b8-4fec-8c1c-6eaa36d42fc4" name="inputs" type="Block">
    <subsheetid>f0441b78-8dea-453a-82b9-3bdad0c7e77d</subsheetid>
    <loginhibit />
    <display x="-165" y="-150" w="120" h="60" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="4abead00-4252-4ed6-9757-57c63140c576" name="getTextFromPyScript" type="SubSheet">
    <subsheetid>f0441b78-8dea-453a-82b9-3bdad0c7e77d</subsheetid>
    <loginhibit />
    <display x="15" y="0" />
    <inputs>
      <input type="text" name="script(mand)" friendlyname="script(mand)" narrative="python script string" expr="[Script]" />
      <input type="text" name="call_back_function_name(mand)" friendlyname="call_back_function_name(mand)" narrative="Call back function name (Don't include &quot;()&quot;)" expr="&quot;install&quot;" />
      <input type="collection" name="Parameters(opt)" friendlyname="Parameters(opt)" narrative="this parameters will pass to function" expr="" />
    </inputs>
    <outputs>
      <output type="text" name="string" friendlyname="string" narrative="This is output from python script" stage="string" />
      <output type="flag" name="Suucess" friendlyname="Suucess" stage="Success" />
      <output type="text" name="Error Message" friendlyname="Error Message" stage="Error Message" />
    </outputs>
    <onsuccess>649f09e7-870d-4c12-baa4-3286a6e64520</onsuccess>
    <processid>129ddb52-ef8f-414c-aa3d-d26eede6da01</processid>
  </stage>
  <stage stageid="710db6c4-50b6-4359-91c4-78673dffcb78" name="Parse Script" type="Calculation">
    <subsheetid>f0441b78-8dea-453a-82b9-3bdad0c7e77d</subsheetid>
    <loginhibit />
    <display x="15" y="-45" />
    <onsuccess>4abead00-4252-4ed6-9757-57c63140c576</onsuccess>
    <calculation expression="&quot;import subprocess&quot;&amp;NewLine()&amp;&quot;&#xA;import sys&quot;&amp;NewLine()&amp;&quot;&#xA;import traceback&quot;&amp;NewLine()&amp;&quot;&#xA;&#xA;def install():&quot;&amp;NewLine()&amp;&quot;&#xA; try:&quot;&amp;NewLine()&amp;&quot;&#xA;  resu = subprocess.check_output([r'&quot;&amp;[PythonRootFolderPath]&amp;&quot;\python.exe', '-m', 'pip', 'uninstall', '-y', '&quot;&amp;[Module Name]&amp;&quot;'], shell=False)&quot;&amp;NewLine()&amp;&quot;&#xA;  return str(resu.decode('utf-8'))&quot;&amp;NewLine()&amp;&quot;&#xA; except Exception as e:&quot;&amp;NewLine()&amp;&quot;&#xA;  return f'Error: {str(e)}\n{traceback.format_exc()}'&quot;&#xA;" stage="Script" />
  </stage>
  <stage stageid="649f09e7-870d-4c12-baa4-3286a6e64520" name="End" type="End">
    <subsheetid>f0441b78-8dea-453a-82b9-3bdad0c7e77d</subsheetid>
    <loginhibit />
    <display x="15" y="45" />
    <outputs>
      <output type="text" name="Error Message" stage="Error Message" />
      <output type="flag" name="Success" stage="Success" />
      <output type="text" name="Script_Output" stage="string" />
    </outputs>
  </stage>
  <stage stageid="4169f11b-e289-4555-906c-e3b7a31799e3" name="Outputs" type="Block">
    <subsheetid>f3bc5d65-3e82-4b37-8463-de3fc1a0a785</subsheetid>
    <loginhibit />
    <display x="-165" y="-15" w="120" h="90" />
    <font family="Segoe UI" size="10" style="Regular" color="00FF00" />
  </stage>
  <stage stageid="0a589f11-d7f1-49f4-9b26-600c2901552a" name="Error_Message" type="Data">
    <subsheetid>255c4778-f4fc-4bd8-b1b5-5e744212297e</subsheetid>
    <display x="-195" y="30" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="c602018d-f4d1-48ce-a96a-d11f11c10038" name="Success" type="Data">
    <subsheetid>255c4778-f4fc-4bd8-b1b5-5e744212297e</subsheetid>
    <display x="-195" y="60" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="ee8a8dbd-9e1d-4515-b7ce-8410954da32e" name="Outputs" type="Block">
    <subsheetid>255c4778-f4fc-4bd8-b1b5-5e744212297e</subsheetid>
    <loginhibit />
    <display x="-255" y="0" w="120" h="90" />
    <font family="Segoe UI" size="10" style="Regular" color="00FF00" />
  </stage>
  <stage stageid="8834b2d9-7a52-4d7c-ac32-c2cc46717497" name="Local" type="Block">
    <subsheetid>378f1982-bc0b-480a-bf8a-1bc3b15ff4a1</subsheetid>
    <loginhibit />
    <display x="-120" y="-75" w="120" h="60" />
    <font family="Segoe UI" size="10" style="Regular" color="FFCC00" />
  </stage>
  <stage stageid="7139c060-a7e9-4383-8008-eb5f42605660" name="outputs" type="Block">
    <subsheetid>f0441b78-8dea-453a-82b9-3bdad0c7e77d</subsheetid>
    <loginhibit />
    <display x="-165" y="0" w="120" h="120" />
    <font family="Segoe UI" size="10" style="Regular" color="00FF00" />
  </stage>
  <stage stageid="6d909323-51e4-47e9-9e38-404013da5984" name="Script" type="Data">
    <subsheetid>f0441b78-8dea-453a-82b9-3bdad0c7e77d</subsheetid>
    <loginhibit />
    <display x="-105" y="-45" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="c5d70450-da2e-4093-8544-3863eb98f5a6" name="Success" type="Data">
    <subsheetid>f0441b78-8dea-453a-82b9-3bdad0c7e77d</subsheetid>
    <display x="-105" y="60" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="4df35f57-7494-4094-8f15-3d2a63271cb1" name="Error Message" type="Data">
    <subsheetid>f0441b78-8dea-453a-82b9-3bdad0c7e77d</subsheetid>
    <display x="-105" y="90" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="d355efcf-d7f7-4858-b809-58bfe499cbb6" name="string" type="Data">
    <subsheetid>f0441b78-8dea-453a-82b9-3bdad0c7e77d</subsheetid>
    <display x="-105" y="30" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="09bbae72-e191-45d8-bef9-e10e75d6448d" name="Local" type="Block">
    <subsheetid>f0441b78-8dea-453a-82b9-3bdad0c7e77d</subsheetid>
    <loginhibit />
    <display x="-165" y="-75" w="120" h="60" />
    <font family="Segoe UI" size="10" style="Regular" color="FFCC00" />
  </stage>
  <stage stageid="de3ee1ee-ef37-401d-b8b3-4e1a9e93b444" name="Start" type="Start">
    <subsheetid>c4856e06-6af6-462d-860e-39896eeba17f</subsheetid>
    <loginhibit />
    <display x="-75" y="-90" />
    <inputs>
      <input type="text" name="PyScriptTextOrPyFilePath*" narrative="please provide python script text or file path (.py or .pyc)" stage="script" />
      <input type="text" name="Callback Function Name*" narrative="Call back function name (Don't include &quot;()&quot;)" stage="function_name" />
      <input type="collection" name="Parameters**" narrative="this parameters will pass to call back function" stage="Parameters(opt)" />
    </inputs>
    <onsuccess>89fdeb78-7229-4085-a38a-72989657effa</onsuccess>
  </stage>
  <stage stageid="caeaf07e-c7e0-4fc8-a677-100346c359da" name="function_name" type="Data">
    <subsheetid>c4856e06-6af6-462d-860e-39896eeba17f</subsheetid>
    <display x="-195" y="-75" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="d15c852e-5d53-43ec-a717-574633d64aae" name="Parameters(opt)" type="Collection">
    <subsheetid>c4856e06-6af6-462d-860e-39896eeba17f</subsheetid>
    <display x="-195" y="-45" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="52a072c4-654a-45ae-9469-b87c47307083" name="script" type="Data">
    <subsheetid>c4856e06-6af6-462d-860e-39896eeba17f</subsheetid>
    <display x="-195" y="-135" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="8da497fd-cbdf-4742-b1b2-7d04d7f204c0" name="inputs" type="Block">
    <subsheetid>c4856e06-6af6-462d-860e-39896eeba17f</subsheetid>
    <loginhibit />
    <display x="-255" y="-165" w="120" h="150" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="89fdeb78-7229-4085-a38a-72989657effa" name="Get Text" type="Code">
    <subsheetid>c4856e06-6af6-462d-860e-39896eeba17f</subsheetid>
    <loginhibit />
    <display x="-75" y="-45" />
    <inputs>
      <input type="text" name="script" expr="[script]" />
      <input type="text" name="function_name" expr="[function_name]" />
      <input type="collection" name="param" expr="[Parameters(opt)]" />
    </inputs>
    <outputs>
      <output type="text" name="ret" stage="fun" />
      <output type="flag" name="Success" stage="Success" />
      <output type="text" name="Error_Message" stage="Error_Message" />
    </outputs>
    <onsuccess>0200bfb6-6145-43f8-83d9-6243367bd259</onsuccess>
    <code><![CDATA[IsInitialised();
OutputResults result = null;


Task t = Task.Run(() => { 
if(!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name) && (script.EndsWith(".py") || script.EndsWith(".pyc")) )
	result = instance2.ExecutePythonScript<string>(script, function_name, param,true);
else if (!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name))
	result = instance2.ExecutePythonScript<string>(script, function_name, param);
else result = null;
});
t.Wait(TimeSpan.FromSeconds(GlobalWait));
	
if(result == null){
	Success = false;
	Error_Message = "script or file_name is invalid or script execution timedout";
	ret = default(string);
}else{
	Success = result.isSuccess;
	Error_Message = result.errorMessage;
	if(result.outResult != null)
		ret = (string)result.outResult;
	else ret = default(string);
}]]></code>
  </stage>
  <stage stageid="0f971543-3b2a-4ce1-b5a6-619261e22bef" name="Get Collection" type="SubSheetInfo">
    <subsheetid>8ca3427d-7efe-46bb-8184-c719e5f3b861</subsheetid>
    <narrative>This page will get Collection from python script.
Note: Make sure call back function should be return type and return Object should be DataTable</narrative>
    <display x="-195" y="15" w="150" h="90" />
  </stage>
  <stage stageid="fdc5fbfc-f87e-4fce-a1e5-6a664a82129c" name="function_name" type="Data">
    <subsheetid>8ca3427d-7efe-46bb-8184-c719e5f3b861</subsheetid>
    <display x="-45" y="-45" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="a088c725-9c10-4bc2-832f-714050b58844" name="Parameters(opt)" type="Collection">
    <subsheetid>8ca3427d-7efe-46bb-8184-c719e5f3b861</subsheetid>
    <display x="-45" y="-15" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="a5a556f5-05ce-49ab-8dfa-2ba516efd943" name="script" type="Data">
    <subsheetid>8ca3427d-7efe-46bb-8184-c719e5f3b861</subsheetid>
    <display x="-45" y="-75" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="584d50a8-b203-4db5-8b2d-6fe25b5d1b45" name="inputs" type="Block">
    <subsheetid>8ca3427d-7efe-46bb-8184-c719e5f3b861</subsheetid>
    <loginhibit />
    <display x="-105" y="-135" w="120" h="150" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="4ab69362-6539-4634-858b-5ab4b15afe04" name="outputs" type="Block">
    <subsheetid>8ca3427d-7efe-46bb-8184-c719e5f3b861</subsheetid>
    <loginhibit />
    <display x="-105" y="30" w="120" h="120" />
    <font family="Segoe UI" size="10" style="Regular" color="00FF00" />
  </stage>
  <stage stageid="ecb259b1-1256-4aa9-bd4c-764e580cd545" name="bin" type="Collection">
    <subsheetid>8ca3427d-7efe-46bb-8184-c719e5f3b861</subsheetid>
    <loginhibit />
    <display x="-45" y="60" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="5789c0e9-528c-4ba4-b10b-86cc0d101ccb" name="Error_Message" type="Data">
    <subsheetid>8ca3427d-7efe-46bb-8184-c719e5f3b861</subsheetid>
    <display x="-45" y="90" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="5635126e-01a6-4947-a606-2218cfb6c364" name="Success" type="Data">
    <subsheetid>8ca3427d-7efe-46bb-8184-c719e5f3b861</subsheetid>
    <display x="-45" y="120" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="48bb0130-e279-44b8-9c57-198e775102f4" name="End" type="End">
    <subsheetid>8ca3427d-7efe-46bb-8184-c719e5f3b861</subsheetid>
    <loginhibit />
    <display x="75" y="30" />
    <outputs>
      <output type="text" name="Error Message" stage="Error_Message" />
      <output type="flag" name="Success" stage="Success" />
      <output type="collection" name="Script_Output" stage="bin" />
    </outputs>
  </stage>
  <stage stageid="2c9f2f97-384c-4c4d-a522-5adf9c297d6b" name="Get DataTable" type="SubSheet">
    <subsheetid>8ca3427d-7efe-46bb-8184-c719e5f3b861</subsheetid>
    <loginhibit />
    <display x="75" y="-15" />
    <inputs>
      <input type="text" name="Callback Function Name*" friendlyname="Callback Function Name*" narrative="Call back function name (Don't include &quot;()&quot;)" expr="[function_name]" />
      <input type="text" name="PyScriptTextOrPyFilePath*" friendlyname="PyScriptTextOrPyFilePath*" narrative="please provide python script text or file path (.py or .pyc)" expr="[script]" />
      <input type="collection" name="Parameters**" friendlyname="Parameters**" narrative="this parameters will pass to call back function" expr="[Parameters(opt)]" />
    </inputs>
    <outputs>
      <output type="text" name="Error Message" friendlyname="Error Message" stage="Error_Message" />
      <output type="flag" name="Success" friendlyname="Success" stage="Success" />
      <output type="collection" name="Script_Output" friendlyname="Script_Output" stage="bin" />
    </outputs>
    <onsuccess>48bb0130-e279-44b8-9c57-198e775102f4</onsuccess>
    <processid>0c8d485c-6b79-44b9-8bdd-ed05e727bf85</processid>
  </stage>
  <stage stageid="6baa3e4a-1c8b-476d-8e6a-c085a5a77e13" name="Note3" type="Note">
    <subsheetid>a1a1ddb2-cb46-41d6-9b3f-be704ac35078</subsheetid>
    <loginhibit />
    <narrative>In Input Parameter ending of stars( *  **  )meanings.

* Means mandatory parameter.

** Means optional parameter</narrative>
    <display x="390" y="-60" w="540" h="300" />
    <font family="Segoe UI" size="18" style="Bold" color="FF0000" />
  </stage>
  <stage stageid="dcafac47-c8ec-4d0f-b75d-748ab881ed4c" name="Close Instance" type="SubSheetInfo">
    <subsheetid>24064714-3f88-47ba-a199-a92d0290d8e2</subsheetid>
    <narrative>This action will close the instance and cleanup.</narrative>
    <display x="-150" y="-15" w="150" h="90" />
  </stage>
  <stage stageid="e1dfc606-a1bc-4c1e-ac24-4824103b8bb9" name="Start" type="Start">
    <subsheetid>24064714-3f88-47ba-a199-a92d0290d8e2</subsheetid>
    <loginhibit />
    <display x="15" y="-105" />
    <onsuccess>f33ab473-0a7c-4ded-8823-97096b987792</onsuccess>
  </stage>
  <stage stageid="8f4c19dd-b6ef-4813-885a-ef761469ac2d" name="End" type="End">
    <subsheetid>24064714-3f88-47ba-a199-a92d0290d8e2</subsheetid>
    <loginhibit />
    <display x="15" y="90" />
  </stage>
  <stage stageid="f33ab473-0a7c-4ded-8823-97096b987792" name="Close Instance" type="Code">
    <subsheetid>24064714-3f88-47ba-a199-a92d0290d8e2</subsheetid>
    <display x="15" y="-15" />
    <outputs>
      <output type="text" name="ClosingException" stage="ClosingException" />
    </outputs>
    <onsuccess>aaa1508d-aa5a-4a2b-ae24-385334e7c6a6</onsuccess>
    <code><![CDATA[ClosingException = "";

if(instance2 != null)
	ClosingException = instance2.Close();

instance2 = null;
GC.Collect();
Thread.Sleep(5000);
]]></code>
  </stage>
  <stage stageid="8ea76c5f-393c-4a0d-9710-90e947923068" name="Get MultipleValues" type="SubSheetInfo">
    <subsheetid>9a41b306-9bb5-4e09-b1c4-97b269f78b62</subsheetid>
    <narrative>This page will get Collection from python script.
Note: Make sure call back function should be return type and return Object should be DataTable</narrative>
    <display x="-195" y="15" w="150" h="90" />
  </stage>
  <stage stageid="09fb4ff9-ed0a-423a-aa7e-7ce6b5c02522" name="function_name" type="Data">
    <subsheetid>9a41b306-9bb5-4e09-b1c4-97b269f78b62</subsheetid>
    <display x="-45" y="-45" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="a5570a83-3fc3-4d2e-8c73-a94af04d6be8" name="Parameters(opt)" type="Collection">
    <subsheetid>9a41b306-9bb5-4e09-b1c4-97b269f78b62</subsheetid>
    <display x="-45" y="-15" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="41e7ffac-0eb6-4e17-b790-3f7cc5a38b96" name="script" type="Data">
    <subsheetid>9a41b306-9bb5-4e09-b1c4-97b269f78b62</subsheetid>
    <display x="-45" y="-105" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="ea114f4a-93d3-4004-a1a0-ecf8271f66c5" name="inputs" type="Block">
    <subsheetid>9a41b306-9bb5-4e09-b1c4-97b269f78b62</subsheetid>
    <loginhibit />
    <display x="-105" y="-135" w="120" h="150" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="9ee75172-97ad-401a-aefb-1a08f30e1015" name="outputs" type="Block">
    <subsheetid>9a41b306-9bb5-4e09-b1c4-97b269f78b62</subsheetid>
    <loginhibit />
    <display x="-105" y="30" w="120" h="120" />
    <font family="Segoe UI" size="10" style="Regular" color="00FF00" />
  </stage>
  <stage stageid="0ef0771f-6e42-4040-b223-bf63b2cf21da" name="bin" type="Collection">
    <subsheetid>9a41b306-9bb5-4e09-b1c4-97b269f78b62</subsheetid>
    <loginhibit />
    <display x="-45" y="60" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="4cc7911c-e7e9-432a-989a-34a1aab8ace6" name="Get MultipleValues" type="Code">
    <subsheetid>9a41b306-9bb5-4e09-b1c4-97b269f78b62</subsheetid>
    <loginhibit />
    <display x="75" y="-15" />
    <inputs>
      <input type="text" name="script" expr="[script]" />
      <input type="text" name="function_name" expr="[function_name]" />
      <input type="collection" name="param" expr="[Parameters(opt)]" />
    </inputs>
    <outputs>
      <output type="collection" name="outParam" stage="bin" />
      <output type="flag" name="Success" stage="Success" />
      <output type="text" name="Error_Message" stage="Error_Message" />
    </outputs>
    <onsuccess>b5931200-c26d-4874-be40-72ba00967c8f</onsuccess>
    <code><![CDATA[IsInitialised();
OutputResults result = null;
try{
	
Task t = Task.Run(() => { 
if(!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name) && (script.EndsWith(".py") || script.EndsWith(".pyc")) )
	result = instance2.ExecutePythonScript<PyTuple>(script, function_name, param,true);
else if (!string.IsNullOrEmpty(script) && !string.IsNullOrEmpty(function_name))
	result = instance2.ExecutePythonScript<PyTuple>(script, function_name, param);
else result = null;
});
t.Wait(TimeSpan.FromSeconds(GlobalWait));

if(result == null){
	Success = false;
	Error_Message = "script or file_name is invalid or script execution timedout";
	outParam = default(DataTable);
}else{
	Success = result.isSuccess;
	Error_Message = result.errorMessage;
	if(result.outResult != null)
		//outParam = default(DataTable);
		outParam = (DataTable)result.outResult;
	else outParam = default(DataTable);
}
}catch(Exception ex){throw new Exception(ex.Message+"\n"+(ex.InnerException != null ? ex.InnerException.Message :"")+"\n"+ex.StackTrace);}]]></code>
  </stage>
  <stage stageid="54cbfdbf-4c67-44be-872e-060052fa537a" name="Error_Message" type="Data">
    <subsheetid>9a41b306-9bb5-4e09-b1c4-97b269f78b62</subsheetid>
    <display x="-45" y="90" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="c3d6c8c3-08ad-4f29-9c37-f6877ae5e614" name="Success" type="Data">
    <subsheetid>9a41b306-9bb5-4e09-b1c4-97b269f78b62</subsheetid>
    <display x="-45" y="120" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="b5931200-c26d-4874-be40-72ba00967c8f" name="End" type="End">
    <subsheetid>9a41b306-9bb5-4e09-b1c4-97b269f78b62</subsheetid>
    <loginhibit />
    <display x="75" y="30" />
    <outputs>
      <output type="text" name="Error Message" stage="Error_Message" />
      <output type="flag" name="Success" stage="Success" />
      <output type="collection" name="Script_Output" stage="bin" />
    </outputs>
  </stage>
  <stage stageid="ad7b15b0-8f65-4202-921c-6d97881b2bb6" name="Start" type="Start">
    <subsheetid>8b2b1c23-f78f-4dc4-b916-cf5d04a8a639</subsheetid>
    <loginhibit />
    <display x="60" y="-60" />
    <inputs>
      <input type="text" name="PyScriptTextOrPyFilePath*" narrative="please provide python script text or file path (.py or .pyc)" stage="script" />
      <input type="text" name="Callback Function Name*" narrative="Call back function name (Don't include &quot;()&quot;)" stage="function_name" />
      <input type="collection" name="Parameters**" narrative="this parameters will pass to call back function" stage="Parameters(opt)" />
    </inputs>
    <onsuccess>f7db67f3-0e7e-403d-9934-9c413d2785de</onsuccess>
  </stage>
  <stage stageid="2b071daa-956c-48f7-887b-f58e4dbe3143" name="Start" type="Start">
    <subsheetid>0c8d485c-6b79-44b9-8bdd-ed05e727bf85</subsheetid>
    <loginhibit />
    <display x="75" y="-60" />
    <inputs>
      <input type="text" name="PyScriptTextOrPyFilePath*" narrative="please provide python script text or file path (.py or .pyc)" stage="script" />
      <input type="text" name="Callback Function Name*" narrative="Call back function name (Don't include &quot;()&quot;)" stage="function_name" />
      <input type="collection" name="Parameters**" narrative="this parameters will pass to call back function" stage="Parameters(opt)" />
    </inputs>
    <onsuccess>42452f06-3da2-4382-a3e5-0f08d5e134d3</onsuccess>
  </stage>
  <stage stageid="6e745b54-c687-4b9d-8788-55379403998e" name="Start" type="Start">
    <subsheetid>9a41b306-9bb5-4e09-b1c4-97b269f78b62</subsheetid>
    <loginhibit />
    <display x="75" y="-60" />
    <inputs>
      <input type="text" name="PyScriptTextOrPyFilePath*" narrative="please provide python script text or file path (.py or .pyc)" stage="script" />
      <input type="text" name="Callback Function Name*" narrative="Call back function name (Don't include &quot;()&quot;)" stage="function_name" />
      <input type="collection" name="Parameters**" narrative="this parameters will pass to call back function" stage="Parameters(opt)" />
    </inputs>
    <onsuccess>4cc7911c-e7e9-432a-989a-34a1aab8ace6</onsuccess>
  </stage>
  <stage stageid="ea0f1dd8-0516-4c2d-814b-14c6efb69b5e" name="Start" type="Start">
    <subsheetid>8ca3427d-7efe-46bb-8184-c719e5f3b861</subsheetid>
    <loginhibit />
    <display x="75" y="-60" />
    <inputs>
      <input type="text" name="PyScriptTextOrPyFilePath*" narrative="please provide python script text or file path (.py or .pyc)" stage="script" />
      <input type="text" name="Callback Function Name*" narrative="Call back function name (Don't include &quot;()&quot;)" stage="function_name" />
      <input type="collection" name="Parameters**" narrative="this parameters will pass to call back function" stage="Parameters(opt)" />
    </inputs>
    <onsuccess>2c9f2f97-384c-4c4d-a522-5adf9c297d6b</onsuccess>
  </stage>
  <stage stageid="d912b582-66fd-4a8d-8c42-07f0ae8cbff4" name="Start" type="Start">
    <subsheetid>63f66cd9-d661-4291-b7c2-a2cb6b7891b5</subsheetid>
    <loginhibit />
    <display x="60" y="-30" />
    <inputs>
      <input type="text" name="PyScriptTextOrPyFilePath*" narrative="please provide python script text or file path (.py or .pyc)" stage="script" />
      <input type="text" name="Callback Function Name*" narrative="Call back function name (Don't include &quot;()&quot;)" stage="function_name" />
      <input type="collection" name="Parameters**" narrative="this parameters will pass to call back function" stage="Parameters(opt)" />
    </inputs>
    <onsuccess>180f1b78-b143-43b7-9455-28e4e7f4922c</onsuccess>
  </stage>
  <stage stageid="907675a6-183d-4381-b4aa-eec07363517f" name="Start" type="Start">
    <subsheetid>72ebe8b9-0556-457c-83d7-77568d612485</subsheetid>
    <loginhibit />
    <display x="75" y="-45" />
    <inputs>
      <input type="text" name="PyScriptTextOrPyFilePath*" narrative="please provide python script text or file path (.py or .pyc)" stage="script" />
      <input type="text" name="Callback Function Name*" narrative="Call back function name (Don't include &quot;()&quot;)" stage="function_name" />
      <input type="collection" name="Parameters**" narrative="this parameters will pass to call back function" stage="Parameters(opt)" />
    </inputs>
    <onsuccess>8fd51b66-7c42-4b7b-96ef-7e858edfd390</onsuccess>
  </stage>
  <stage stageid="6070c7ae-010f-497e-b5d1-29e22b587cde" name="Start" type="Start">
    <subsheetid>db814ed0-265b-4a00-8b3f-36db06407383</subsheetid>
    <loginhibit />
    <display x="60" y="-45" />
    <inputs>
      <input type="text" name="PyScriptTextOrPyFilePath*" narrative="please provide python script text or file path (.py or .pyc)" stage="script" />
      <input type="text" name="Callback Function Name*" narrative="Call back function name (Don't include &quot;()&quot;)" stage="function_name" />
      <input type="collection" name="Parameters**" narrative="this parameters will pass to call back function" stage="Parameters(opt)" />
    </inputs>
    <onsuccess>501cea95-fd91-44cf-a7e4-494cca18c3fe</onsuccess>
  </stage>
  <stage stageid="39f1b003-ff00-4c40-a969-b0e26d6e70ef" name="Start" type="Start">
    <subsheetid>52083995-a382-409e-a8ca-aa0638170e64</subsheetid>
    <loginhibit />
    <display x="30" y="-90" />
    <inputs>
      <input type="text" name="PyScriptTextOrPyFilePath*" narrative="please provide python script text or file path (.py or .pyc)" stage="script" />
      <input type="text" name="Callback Function Name*" narrative="Call back function name (Don't include &quot;()&quot;)" stage="function_name" />
      <input type="collection" name="Parameters**" narrative="this parameters will pass to call back function" stage="Parameters(opt)" />
    </inputs>
    <onsuccess>fd15622e-d646-483a-ba56-017aefc30713</onsuccess>
  </stage>
  <stage stageid="608d2792-9e9e-462b-a89d-a6610f8e0847" name="Start" type="Start">
    <subsheetid>8056d7fb-b380-4ba6-907e-31badc015322</subsheetid>
    <loginhibit />
    <display x="-75" y="-15" />
    <inputs>
      <input type="text" name="PyScriptTextOrPyFilePath*" narrative="please provide python script text or file path (.py or .pyc)" stage="script" />
      <input type="text" name="Callback Function Name*" narrative="Call back function name (Don't include &quot;()&quot;)" stage="function_name" />
      <input type="collection" name="Parameters**" narrative="this parameters will pass to call back function" stage="Parameters(opt)" />
    </inputs>
    <onsuccess>5660f9cd-9d33-4df6-a64d-dc65993c0d3e</onsuccess>
  </stage>
  <stage stageid="58b600a3-9d47-437a-a394-51a824cd66dc" name="Start" type="Start">
    <subsheetid>287e8629-16ba-4635-bbbe-2b20e73bdc7f</subsheetid>
    <loginhibit />
    <display x="-75" y="-15" />
    <inputs>
      <input type="text" name="PyScriptTextOrPyFilePath*" narrative="please provide python script text or file path (.py or .pyc)" stage="script" />
      <input type="text" name="Callback Function Name*" narrative="Call back function name (Don't include &quot;()&quot;)" stage="function_name" />
      <input type="collection" name="Parameters**" narrative="this parameters will pass to call back function" stage="Parameters(opt)" />
    </inputs>
    <onsuccess>6b5ca655-a694-4522-bed5-bbbac51f2036</onsuccess>
  </stage>
  <stage stageid="42bf79ad-fd75-473e-940d-a4d01012aa80" name="Start" type="Start">
    <subsheetid>4b5acbc4-b880-4e0c-9373-aa2f7116ebf0</subsheetid>
    <loginhibit />
    <display x="-75" y="-45" />
    <inputs>
      <input type="text" name="PyScriptTextOrPyFilePath*" narrative="please provide python script text or file path (.py or .pyc)" stage="script" />
      <input type="text" name="Callback Function Name*" narrative="Call back function name (Don't include &quot;()&quot;)" stage="function_name" />
      <input type="collection" name="Parameters**" narrative="this parameters will pass to call back function" stage="Parameters(opt)" />
    </inputs>
    <onsuccess>2553dc7c-6b7f-484f-8ccb-75ac5bbb3219</onsuccess>
  </stage>
  <stage stageid="b5d304b7-a16b-4221-b46f-7f6655dec110" name="Note4" type="Note">
    <subsheetid>24064714-3f88-47ba-a199-a92d0290d8e2</subsheetid>
    <loginhibit />
    <narrative>If you are facing Blueprism crash issue don't call this action even after completion of python usage.</narrative>
    <display x="195" y="-15" w="240" h="90" />
    <font family="Segoe UI" size="14" style="Bold" color="FF0000" />
  </stage>
  <stage stageid="0ff70bbe-5d27-449f-88e1-0d7b7a964832" name="Set Module Search Path" type="SubSheetInfo">
    <subsheetid>fc3bf868-3410-4295-a5f7-54db32cae95f</subsheetid>
    <display x="-360" y="-30" w="150" h="90" />
  </stage>
  <stage stageid="b5347359-0aaf-4712-9251-ae700d8772d3" name="Start" type="Start">
    <subsheetid>fc3bf868-3410-4295-a5f7-54db32cae95f</subsheetid>
    <loginhibit />
    <display x="15" y="-105" />
    <inputs>
      <input type="text" name="Path" stage="Path" />
    </inputs>
    <onsuccess>6b082eb1-83df-4719-8899-fd7361327eb8</onsuccess>
  </stage>
  <stage stageid="18c2e23f-5006-4bfb-8478-dfcb121f8db3" name="Path" type="Data">
    <subsheetid>fc3bf868-3410-4295-a5f7-54db32cae95f</subsheetid>
    <display x="-105" y="-45" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="6b082eb1-83df-4719-8899-fd7361327eb8" name="Parse Set Path Script" type="Calculation">
    <subsheetid>fc3bf868-3410-4295-a5f7-54db32cae95f</subsheetid>
    <loginhibit />
    <display x="15" y="-60" />
    <onsuccess>68a95c3f-3cb3-47ce-a102-6005ddbaeb01</onsuccess>
    <calculation expression="&quot;import sys&quot;&amp;NewLine()&amp;&quot;&#xA;def setPath():&quot;&amp;NewLine()&amp;&quot;&#xA; sys.path.append(r'&quot;&amp;[Path]&amp;&quot;')&quot;&amp;NewLine()&amp;&quot;&#xA; return 'success'&quot;&amp;NewLine()" stage="Script" />
  </stage>
  <stage stageid="75d3bee8-b7c3-46e7-a3c6-62115a3ed856" name="Script" type="Data">
    <subsheetid>fc3bf868-3410-4295-a5f7-54db32cae95f</subsheetid>
    <display x="-105" y="30" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue xml:space="preserve">import sys
def setPath():
 sys.path.append(r{})
 return 'success'</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="68a95c3f-3cb3-47ce-a102-6005ddbaeb01" name="getTextFromPyScript" type="SubSheet">
    <subsheetid>fc3bf868-3410-4295-a5f7-54db32cae95f</subsheetid>
    <loginhibit />
    <display x="15" y="-15" />
    <inputs>
      <input type="text" name="script(mand)" friendlyname="script(mand)" narrative="python script string" expr="[Script]" />
      <input type="text" name="call_back_function_name(mand)" friendlyname="call_back_function_name(mand)" narrative="Call back function name (Don't include &quot;()&quot;)" expr="&quot;setPath&quot;" />
      <input type="collection" name="Parameters(opt)" friendlyname="Parameters(opt)" narrative="this parameters will pass to function" expr="" />
    </inputs>
    <outputs>
      <output type="text" name="string" friendlyname="string" narrative="This is output from python script" stage="string" />
      <output type="flag" name="Suucess" friendlyname="Suucess" stage="Success" />
      <output type="text" name="Error Message" friendlyname="Error Message" stage="Error Message" />
    </outputs>
    <onsuccess>0e288ec7-0989-4fda-8eb4-f768c0bbda50</onsuccess>
    <processid>129ddb52-ef8f-414c-aa3d-d26eede6da01</processid>
  </stage>
  <stage stageid="9052df63-5c7d-4cb2-a103-16a8c22e9f06" name="string" type="Data">
    <subsheetid>fc3bf868-3410-4295-a5f7-54db32cae95f</subsheetid>
    <display x="180" y="-30" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="98759dea-a89d-4fd6-899c-449cf6ef6985" name="Success" type="Data">
    <subsheetid>fc3bf868-3410-4295-a5f7-54db32cae95f</subsheetid>
    <display x="180" y="0" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="89ed23d6-789f-4603-8d01-c08a1c0af752" name="Error Message" type="Data">
    <subsheetid>fc3bf868-3410-4295-a5f7-54db32cae95f</subsheetid>
    <display x="180" y="30" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="0e288ec7-0989-4fda-8eb4-f768c0bbda50" name="End" type="End">
    <subsheetid>fc3bf868-3410-4295-a5f7-54db32cae95f</subsheetid>
    <loginhibit />
    <display x="15" y="30" />
    <outputs>
      <output type="text" name="Error Message" stage="Error Message" />
      <output type="flag" name="Success" stage="Success" />
    </outputs>
  </stage>
  <stage stageid="e5c3dc8d-3a3c-4249-880c-2f330f07b009" name="outputs" type="Block">
    <subsheetid>fc3bf868-3410-4295-a5f7-54db32cae95f</subsheetid>
    <loginhibit />
    <display x="120" y="-60" w="120" h="120" />
    <font family="Segoe UI" size="10" style="Regular" color="00FF00" />
  </stage>
  <stage stageid="5364d506-f460-4a57-b7eb-b8a8749a31e7" name="Local" type="Block">
    <subsheetid>fc3bf868-3410-4295-a5f7-54db32cae95f</subsheetid>
    <loginhibit />
    <display x="-165" y="0" w="120" h="60" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="8ae88e5b-8e64-42fc-9d32-fd069e18c6f1" name="inputs" type="Block">
    <subsheetid>fc3bf868-3410-4295-a5f7-54db32cae95f</subsheetid>
    <loginhibit />
    <display x="-165" y="-75" w="120" h="60" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="d4f0da50-d535-49d3-9cd9-44bd2467562d" name="IsParamsPythonType" type="Data">
    <loginhibit />
    <display x="225" y="-60" w="150" h="30" />
    <datatype>flag</datatype>
    <initialvalue>True</initialvalue>
    <alwaysinit />
  </stage>
  <stage stageid="dc55f27a-dc00-4a63-a458-f273d77022e9" name="ClosingException" type="Data">
    <subsheetid>24064714-3f88-47ba-a199-a92d0290d8e2</subsheetid>
    <display x="-150" y="60" w="120" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="aaa1508d-aa5a-4a2b-ae24-385334e7c6a6" name="Set in Log" type="Calculation">
    <subsheetid>24064714-3f88-47ba-a199-a92d0290d8e2</subsheetid>
    <display x="15" y="45" />
    <onsuccess>8f4c19dd-b6ef-4813-885a-ef761469ac2d</onsuccess>
    <calculation expression="[ClosingException]&amp;&quot;.&quot;" stage="ClosingException" />
  </stage>
</process>